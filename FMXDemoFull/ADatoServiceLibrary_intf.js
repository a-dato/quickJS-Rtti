//----------------------------------------------------------------------------//
// This unit was automatically generated by the RemObjects SDK after reading  //
// the RODL file associated with this project .                               //
//                                                                            //
// Do not modify this unit manually, or your changes will be lost when this   //
// unit is regenerated the next time you compile the project.                 //
//----------------------------------------------------------------------------//


/* This codegen depends on RemObjectsSDK.js
* Usage:
* var Channel = new RemObjects.SDK.HTTPClientChannel("http://localhost:8099/JSON");
* var Message = new RemObjects.SDK.JSONMessage();
* var Service = new NewService(Channel, Message);
* Service.Sum(1, 2,
*             function(result) {
*                 alert(result);
*             },
*             function(msg) {alert(msg.getErrorMessage())}
* );
*
*/
import {RemObjects} from 'RemObjectsSDK.js';

export var __namespace = {};

// Enum: AccessRight
__namespace.AccessRight = function AccessRight() {
  this.value = null;
};
__namespace.AccessRight.prototype = new RemObjects.SDK.ROEnumType();
__namespace.AccessRight.prototype.enumValues = [
	"NoAccess",
	"SpaceReader",
	"NormalRead",
	"dummy",
	"ReadWrite"
	];
__namespace.AccessRight.prototype.constructor = __namespace.AccessRight;
RemObjects.SDK.RTTI["AccessRight"] = __namespace.AccessRight;

// Enum: CriticalChainZone
__namespace.CriticalChainZone = function CriticalChainZone() {
  this.value = null;
};
__namespace.CriticalChainZone.prototype = new RemObjects.SDK.ROEnumType();
__namespace.CriticalChainZone.prototype.enumValues = [
	"Green",
	"Orange",
	"Red"
	];
__namespace.CriticalChainZone.prototype.constructor = __namespace.CriticalChainZone;
RemObjects.SDK.RTTI["CriticalChainZone"] = __namespace.CriticalChainZone;

// Enum: EventLogFlag
__namespace.EventLogFlag = function EventLogFlag() {
  this.value = null;
};
__namespace.EventLogFlag.prototype = new RemObjects.SDK.ROEnumType();
__namespace.EventLogFlag.prototype.enumValues = [
	"WebhookCalled",
	"WorkpackagesCalled"
	];
__namespace.EventLogFlag.prototype.constructor = __namespace.EventLogFlag;
RemObjects.SDK.RTTI["EventLogFlag"] = __namespace.EventLogFlag;

// Enum: NoteKind
__namespace.NoteKind = function NoteKind() {
  this.value = null;
};
__namespace.NoteKind.prototype = new RemObjects.SDK.ROEnumType();
__namespace.NoteKind.prototype.enumValues = [
	"Issue",
	"BufferRecovery",
	"Comment",
	"EntranceCriterium",
	"ExitCriterium",
	"PriorityChange"
	];
__namespace.NoteKind.prototype.constructor = __namespace.NoteKind;
RemObjects.SDK.RTTI["NoteKind"] = __namespace.NoteKind;

// Enum: NoteStatus
__namespace.NoteStatus = function NoteStatus() {
  this.value = null;
};
__namespace.NoteStatus.prototype = new RemObjects.SDK.ROEnumType();
__namespace.NoteStatus.prototype.enumValues = [
	"None",
	"Open",
	"Closed"
	];
__namespace.NoteStatus.prototype.constructor = __namespace.NoteStatus;
RemObjects.SDK.RTTI["NoteStatus"] = __namespace.NoteStatus;

// Enum: ObjectType
__namespace.ObjectType = function ObjectType() {
  this.value = null;
};
__namespace.ObjectType.prototype = new RemObjects.SDK.ROEnumType();
__namespace.ObjectType.prototype.enumValues = [
	"Space",
	"UnitOfMeasure",
	"Calendar",
	"Resource",
	"ResourceClass",
	"Project",
	"Task",
	"ResourceRequirement",
	"Dependency",
	"ProjectOpen",
	"Note",
	"WorkingHour",
	"Role",
	"Template",
	"User",
	"Stage",
	"Card",
	"MyTasksViewOpen",
	"TaskDesigner",
	"HistoryItem",
	"TaskManager",
	"Document",
	"ResourceClassManager",
	"ResourceManager",
	"ObjectDependenciesUpdate",
	"BudgetGroup",
	"BudgetItem",
	"WebhookQueueListener",
	"Share"
	];
__namespace.ObjectType.prototype.constructor = __namespace.ObjectType;
RemObjects.SDK.RTTI["ObjectType"] = __namespace.ObjectType;

// Enum: ResourceClassType
__namespace.ResourceClassType = function ResourceClassType() {
  this.value = null;
};
__namespace.ResourceClassType.prototype = new RemObjects.SDK.ROEnumType();
__namespace.ResourceClassType.prototype.enumValues = [
	"Normal",
	"Virtual",
	"Team"
	];
__namespace.ResourceClassType.prototype.constructor = __namespace.ResourceClassType;
RemObjects.SDK.RTTI["ResourceClassType"] = __namespace.ResourceClassType;

// Enum: ScheduleStrategy
__namespace.ScheduleStrategy = function ScheduleStrategy() {
  this.value = null;
};
__namespace.ScheduleStrategy.prototype = new RemObjects.SDK.ROEnumType();
__namespace.ScheduleStrategy.prototype.enumValues = [
	"TaskStartDate",
	"ProjectDueDate",
	"NeededFlow",
	"LoadFactor"
	];
__namespace.ScheduleStrategy.prototype.constructor = __namespace.ScheduleStrategy;
RemObjects.SDK.RTTI["ScheduleStrategy"] = __namespace.ScheduleStrategy;

// Enum: SpaceStatus
__namespace.SpaceStatus = function SpaceStatus() {
  this.value = null;
};
__namespace.SpaceStatus.prototype = new RemObjects.SDK.ROEnumType();
__namespace.SpaceStatus.prototype.enumValues = [
	"Ready",
	"Copying"
	];
__namespace.SpaceStatus.prototype.constructor = __namespace.SpaceStatus;
RemObjects.SDK.RTTI["SpaceStatus"] = __namespace.SpaceStatus;

// Enum: SpaceType
__namespace.SpaceType = function SpaceType() {
  this.value = null;
};
__namespace.SpaceType.prototype = new RemObjects.SDK.ROEnumType();
__namespace.SpaceType.prototype.enumValues = [
	"ProjectSpace",
	"ProductionSpace",
	"SimulationFromTemplates",
	"SimulationManualControl"
	];
__namespace.SpaceType.prototype.constructor = __namespace.SpaceType;
RemObjects.SDK.RTTI["SpaceType"] = __namespace.SpaceType;

// Enum: TaskConstraint
__namespace.TaskConstraint = function TaskConstraint() {
  this.value = null;
};
__namespace.TaskConstraint.prototype = new RemObjects.SDK.ROEnumType();
__namespace.TaskConstraint.prototype.enumValues = [
	"DoNotlevel",
	"MustStartOn",
	"MustFinishOn",
	"StartNoEarlierThan",
	"FinishAtOrBefore",
	"StartNoLaterThan",
	"FinishNoLaterThan",
	"AsSoonAsPossible",
	"ALateAsPossible",
	"Ignore"
	];
__namespace.TaskConstraint.prototype.constructor = __namespace.TaskConstraint;
RemObjects.SDK.RTTI["TaskConstraint"] = __namespace.TaskConstraint;

// Enum: TemplateSource
__namespace.TemplateSource = function TemplateSource() {
  this.value = null;
};
__namespace.TemplateSource.prototype = new RemObjects.SDK.ROEnumType();
__namespace.TemplateSource.prototype.enumValues = [
	"WorkSchedule",
	"ProjectIssues",
	"ProjectStatistics",
	"ResourceAvailability",
	"AllTasks",
	"TimeTracking",
	"ResourceClassWIP",
	"Cards",
	"CardsTracking"
	];
__namespace.TemplateSource.prototype.constructor = __namespace.TemplateSource;
RemObjects.SDK.RTTI["TemplateSource"] = __namespace.TemplateSource;

// Enum: TemplateType
__namespace.TemplateType = function TemplateType() {
  this.value = null;
};
__namespace.TemplateType.prototype = new RemObjects.SDK.ROEnumType();
__namespace.TemplateType.prototype.enumValues = [
	"PrintTemplate",
	"ProjectTemplate"
	];
__namespace.TemplateType.prototype.constructor = __namespace.TemplateType;
RemObjects.SDK.RTTI["TemplateType"] = __namespace.TemplateType;

// Enum: UpdateState
__namespace.UpdateState = function UpdateState() {
  this.value = null;
};
__namespace.UpdateState.prototype = new RemObjects.SDK.ROEnumType();
__namespace.UpdateState.prototype.enumValues = [
	"None",
	"Modified",
	"Inserted",
	"Deleted"
	];
__namespace.UpdateState.prototype.constructor = __namespace.UpdateState;
RemObjects.SDK.RTTI["UpdateState"] = __namespace.UpdateState;

// Enum: UserRole
__namespace.UserRole = function UserRole() {
  this.value = null;
};
__namespace.UserRole.prototype = new RemObjects.SDK.ROEnumType();
__namespace.UserRole.prototype.enumValues = [
	"SpaceOwner",
	"SpaceReader",
	"SpaceContact",
	"ProjectManager",
	"ResourceManager",
	"TeamManager",
	"Resource",
	"TaskManager",
	"TeamMember",
	"ProjectTeamMember",
	"Designer",
	"ReadInvitation",
	"ReadWriteInvitation",
	"ExistingRoles"
	];
__namespace.UserRole.prototype.constructor = __namespace.UserRole;
RemObjects.SDK.RTTI["UserRole"] = __namespace.UserRole;

// Enum: UserType
__namespace.UserType = function UserType() {
  this.value = null;
};
__namespace.UserType.prototype = new RemObjects.SDK.ROEnumType();
__namespace.UserType.prototype.enumValues = [
	"SessionUser",
	"MyActivitiesUser",
	"PortfolioUser",
	"ActiveUser"
	];
__namespace.UserType.prototype.constructor = __namespace.UserType;
RemObjects.SDK.RTTI["UserType"] = __namespace.UserType;

// Enum: XmlExportFlags
__namespace.XmlExportFlags = function XmlExportFlags() {
  this.value = null;
};
__namespace.XmlExportFlags.prototype = new RemObjects.SDK.ROEnumType();
__namespace.XmlExportFlags.prototype.enumValues = [
	"DebufferedPlan",
	"ExportForMSProject",
	"DoNotExportAssignments",
	"ManualyScheduled",
	"ExportSkillNames",
	"ExportTimePhasedData"
	];
__namespace.XmlExportFlags.prototype.constructor = __namespace.XmlExportFlags;
RemObjects.SDK.RTTI["XmlExportFlags"] = __namespace.XmlExportFlags;


// Struct: Timespan
__namespace.Timespan = function Timespan() {
	this.Ticks = {dataType : "Int64", value : null};
};
__namespace.Timespan.prototype = new RemObjects.SDK.ROStructType();
__namespace.Timespan.prototype.constructor = __namespace.Timespan;
RemObjects.SDK.RTTI["Timespan"] = __namespace.Timespan;

// Struct: UpdateableObject
__namespace.UpdateableObject = function UpdateableObject() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.UpdateableObject.prototype = new RemObjects.SDK.ROStructType();
__namespace.UpdateableObject.prototype.constructor = __namespace.UpdateableObject;
RemObjects.SDK.RTTI["UpdateableObject"] = __namespace.UpdateableObject;

// Struct: BudgetGroup
__namespace.BudgetGroup = function BudgetGroup() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.UomID = {dataType : "Int64", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.BudgetGroup.prototype = new RemObjects.SDK.ROStructType();
__namespace.BudgetGroup.prototype.constructor = __namespace.BudgetGroup;
RemObjects.SDK.RTTI["BudgetGroup"] = __namespace.BudgetGroup;

// Struct: ObjectDependenciesUpdate
__namespace.ObjectDependenciesUpdate = function ObjectDependenciesUpdate() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.NewID = {dataType : "Int64", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
	this.ObjectType = {dataType : "Integer", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.ObjectDependenciesUpdate.prototype = new RemObjects.SDK.ROStructType();
__namespace.ObjectDependenciesUpdate.prototype.constructor = __namespace.ObjectDependenciesUpdate;
RemObjects.SDK.RTTI["ObjectDependenciesUpdate"] = __namespace.ObjectDependenciesUpdate;

// Struct: TemplateSchedule
__namespace.TemplateSchedule = function TemplateSchedule() {
	this.Configuration = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Count = {dataType : "Int64", value : null};
	this.Deleted = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.EmailConfiguration = {dataType : "WideString", value : null};
	this.Filter = {dataType : "Integer", value : null};
	this.Format = {dataType : "AnsiString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Individual = {dataType : "Boolean", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsDebufferedMode = {dataType : "Boolean", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsNotification = {dataType : "Boolean", value : null};
	this.LastReportPrint = {dataType : "DateTime64", value : null};
	this.Link = {dataType : "AnsiString", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Manual = {dataType : "Integer", value : null};
	this.NextReportPrint = {dataType : "DateTime64", value : null};
	this.Occurrences = {dataType : "Int64", value : null};
	this.OverWriteLink = {dataType : "Boolean", value : null};
	this.Owner = {dataType : "Int64", value : null};
	this.Password = {dataType : "WideString", value : null};
	this.ProjectList = {dataType : "WideString", value : null};
	this.RangeEnd = {dataType : "DateTime64", value : null};
	this.RangeStart = {dataType : "DateTime64", value : null};
	this.Recipients = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.SendAsAttachment = {dataType : "Boolean", value : null};
	this.SendOnce = {dataType : "Boolean", value : null};
	this.SpaceID = {dataType : "Int64", value : null};
	this.Start = {dataType : "DateTime64", value : null};
	this.Stop = {dataType : "DateTime64", value : null};
	this.TemplateID = {dataType : "Int64", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.UserName = {dataType : "WideString", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.TemplateSchedule.prototype = new RemObjects.SDK.ROStructType();
__namespace.TemplateSchedule.prototype.constructor = __namespace.TemplateSchedule;
RemObjects.SDK.RTTI["TemplateSchedule"] = __namespace.TemplateSchedule;

// Struct: Document
__namespace.Document = function Document() {
	this.AObjectType = {dataType : "Integer", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CreatedBy = {dataType : "User", value : null};
	this.CreatedWhen = {dataType : "DateTime64", value : null};
	this.DocumentName = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LastFileWriteDate = {dataType : "DateTime64", value : null};
	this.LockedBy = {dataType : "User", value : null};
	this.LockedWhen = {dataType : "DateTime64", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ModifiedBy = {dataType : "User", value : null};
	this.ModifiedWhen = {dataType : "DateTime64", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
	this.OwningSpace = {dataType : "Int64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.URL = {dataType : "WideString", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Document.prototype = new RemObjects.SDK.ROStructType();
__namespace.Document.prototype.constructor = __namespace.Document;
RemObjects.SDK.RTTI["Document"] = __namespace.Document;

// Struct: Card
__namespace.Card = function Card() {
	this.ActiveHoursBeforeToday = {dataType : "Timespan", value : null};
	this.ActiveHoursToday = {dataType : "Timespan", value : null};
	this.ActiveHoursTodayDate = {dataType : "DateTime64", value : null};
	this.ActiveStatusSetWhen = {dataType : "DateTime64", value : null};
	this.CardPropertyValues = {dataType : "WideString", value : null};
	this.CardType = {dataType : "Guid", value : null};
	this.ClosedWhen = {dataType : "DateTime64", value : null};
	this.Comments = {dataType : "CardCommentArray", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CreatedBy = {dataType : "User", value : null};
	this.CreatedWhen = {dataType : "DateTime64", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.Domain = {dataType : "WideString", value : null};
	this.ExternalKey = {dataType : "WideString", value : null};
	this.ExternalProjectKey = {dataType : "WideString", value : null};
	this.HasPredecessors = {dataType : "Boolean", value : null};
	this.History = {dataType : "CardHistoryItemArray", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.KanbanTokensRequired = {dataType : "Integer", value : null};
	this.LockedWhen = {dataType : "DateTime64", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Parent = {dataType : "Int64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.SortOrder = {dataType : "Integer", value : null};
	this.TaskID = {dataType : "Int64", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Card.prototype = new RemObjects.SDK.ROStructType();
__namespace.Card.prototype.constructor = __namespace.Card;
RemObjects.SDK.RTTI["Card"] = __namespace.Card;

// Struct: SpaceStage
__namespace.SpaceStage = function SpaceStage() {
	this.Color = {dataType : "Int64", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.SortOrder = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.SpaceStage.prototype = new RemObjects.SDK.ROStructType();
__namespace.SpaceStage.prototype.constructor = __namespace.SpaceStage;
RemObjects.SDK.RTTI["SpaceStage"] = __namespace.SpaceStage;

// Struct: ResourceClassWipItem
__namespace.ResourceClassWipItem = function ResourceClassWipItem() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ResourceClassID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.TaskCountReadyToStart = {dataType : "Integer", value : null};
	this.TaskCountStarted = {dataType : "Integer", value : null};
	this.TotalWorkReadyToStart = {dataType : "Timespan", value : null};
	this.TotalWorkStarted = {dataType : "Timespan", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.When = {dataType : "DateTime64", value : null};
	this.WIP_Hours_14_days = {dataType : "Timespan", value : null};
	this.WIP_Hours_30_days = {dataType : "Timespan", value : null};
	this.WIP_Hours_7_days = {dataType : "Timespan", value : null};
	this.WIP_Pct_14_days = {dataType : "Double", value : null};
	this.WIP_Pct_30_days = {dataType : "Double", value : null};
	this.WIP_Pct_7_days = {dataType : "Double", value : null};
	this.WIP_Total = {dataType : "Timespan", value : null};
};
__namespace.ResourceClassWipItem.prototype = new RemObjects.SDK.ROStructType();
__namespace.ResourceClassWipItem.prototype.constructor = __namespace.ResourceClassWipItem;
RemObjects.SDK.RTTI["ResourceClassWipItem"] = __namespace.ResourceClassWipItem;

// Struct: ProjectHistoryItem
__namespace.ProjectHistoryItem = function ProjectHistoryItem() {
	this.AObjectType = {dataType : "Integer", value : null};
	this.By = {dataType : "User", value : null};
	this.Comment = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.ProjectLUID = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.TaskID = {dataType : "Int64", value : null};
	this.TaskLUID = {dataType : "WideString", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.When = {dataType : "DateTime64", value : null};
};
__namespace.ProjectHistoryItem.prototype = new RemObjects.SDK.ROStructType();
__namespace.ProjectHistoryItem.prototype.constructor = __namespace.ProjectHistoryItem;
RemObjects.SDK.RTTI["ProjectHistoryItem"] = __namespace.ProjectHistoryItem;

// Struct: ScheduleData
__namespace.ScheduleData = function ScheduleData() {
	this.ConstraintMakespan = {dataType : "TimeInterval", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ControllingTask = {dataType : "Int64", value : null};
	this.ControllingTaskLoadFactor = {dataType : "Double", value : null};
	this.FeedingBufferPenetration = {dataType : "Double", value : null};
	this.FeedingBufferZone = {dataType : "CriticalChainZone", value : null};
	this.FeedingChain = {dataType : "Chain", value : null};
	this.Flags = {dataType : "Int64", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.Intervals = {dataType : "ScheduledIntervalArray", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LevelingDelay = {dataType : "Timespan", value : null};
	this.LoadFactor = {dataType : "Double", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Messages = {dataType : "StringArray", value : null};
	this.MilestoneBufferChainLength = {dataType : "Timespan", value : null};
	this.MilestoneBufferDueDate = {dataType : "DateTime64", value : null};
	this.MilestoneBufferLCC = {dataType : "Double", value : null};
	this.MilestoneBufferPenetration = {dataType : "Double", value : null};
	this.MilestoneBufferZone = {dataType : "CriticalChainZone", value : null};
	this.ProjectBufferLCC = {dataType : "Double", value : null};
	this.ProjectBufferPenetration = {dataType : "Double", value : null};
	this.ProjectBufferZone = {dataType : "CriticalChainZone", value : null};
	this.ReadyToStartWhen = {dataType : "DateTime64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.ScheduledStart = {dataType : "DateTime64", value : null};
	this.ScheduledStop = {dataType : "DateTime64", value : null};
	this.Start = {dataType : "DateTime64", value : null};
	this.Stop = {dataType : "DateTime64", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.ScheduleData.prototype = new RemObjects.SDK.ROStructType();
__namespace.ScheduleData.prototype.constructor = __namespace.ScheduleData;
RemObjects.SDK.RTTI["ScheduleData"] = __namespace.ScheduleData;

// Struct: OutputTemplate
__namespace.OutputTemplate = function OutputTemplate() {
	this.Commands = {dataType : "WideString", value : null};
	this.Comment = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CreatedBy = {dataType : "User", value : null};
	this.CreatedWhen = {dataType : "DateTime64", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsMostUsed = {dataType : "Boolean", value : null};
	this.LangID = {dataType : "Integer", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.OutputTo = {dataType : "Integer", value : null};
	this.PackageID = {dataType : "Int64", value : null};
	this.Preview = {dataType : "Document", value : null};
	this.ReportSource = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.Source = {dataType : "Integer", value : null};
	this.TemplateSchedules = {dataType : "TemplateScheduleArray", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.XSL = {dataType : "WideString", value : null};
	this._Type = {dataType : "TemplateType", value : null};
};
__namespace.OutputTemplate.prototype = new RemObjects.SDK.ROStructType();
__namespace.OutputTemplate.prototype.constructor = __namespace.OutputTemplate;
RemObjects.SDK.RTTI["OutputTemplate"] = __namespace.OutputTemplate;

// Struct: CoWorker
__namespace.CoWorker = function CoWorker() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CoWorkerID = {dataType : "Int64", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ResourceID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.CoWorker.prototype = new RemObjects.SDK.ROStructType();
__namespace.CoWorker.prototype.constructor = __namespace.CoWorker;
RemObjects.SDK.RTTI["CoWorker"] = __namespace.CoWorker;

// Struct: Holiday
__namespace.Holiday = function Holiday() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsWorking = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.PeriodStart = {dataType : "DateTime64", value : null};
	this.PeriodStop = {dataType : "DateTime64", value : null};
	this.ResourceID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Holiday.prototype = new RemObjects.SDK.ROStructType();
__namespace.Holiday.prototype.constructor = __namespace.Holiday;
RemObjects.SDK.RTTI["Holiday"] = __namespace.Holiday;

// Struct: Activity
__namespace.Activity = function Activity() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Predecessors = {dataType : "TaskArray", value : null};
	this.PredecessorsRoles = {dataType : "RoleArrayArray", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.Successors = {dataType : "TaskArray", value : null};
	this.SuccessorsRoles = {dataType : "RoleArrayArray", value : null};
	this.TaskRowID = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
	this._Task = {dataType : "Task", value : null};
};
__namespace.Activity.prototype = new RemObjects.SDK.ROStructType();
__namespace.Activity.prototype.constructor = __namespace.Activity;
RemObjects.SDK.RTTI["Activity"] = __namespace.Activity;

// Struct: TimeTrackDetail
__namespace.TimeTrackDetail = function TimeTrackDetail() {
	this.CardID = {dataType : "Int64", value : null};
	this.Comment = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.HoursBooked = {dataType : "Timespan", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.TaskID = {dataType : "Int64", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.User_ = {dataType : "User", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.When = {dataType : "DateTime64", value : null};
};
__namespace.TimeTrackDetail.prototype = new RemObjects.SDK.ROStructType();
__namespace.TimeTrackDetail.prototype.constructor = __namespace.TimeTrackDetail;
RemObjects.SDK.RTTI["TimeTrackDetail"] = __namespace.TimeTrackDetail;

// Struct: Role
__namespace.Role = function Role() {
	this.ChangedBy = {dataType : "Int64", value : null};
	this.ChangedWhen = {dataType : "DateTime64", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Duration = {dataType : "Timespan", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsYou = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ProgressDate = {dataType : "DateTime64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.Status = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.WorkRemaining = {dataType : "Timespan", value : null};
	this._Resource = {dataType : "Resource", value : null};
	this._ResourceClass = {dataType : "ResourceClass", value : null};
	this._Space = {dataType : "Space", value : null};
};
__namespace.Role.prototype = new RemObjects.SDK.ROStructType();
__namespace.Role.prototype.constructor = __namespace.Role;
RemObjects.SDK.RTTI["Role"] = __namespace.Role;

// Struct: Note
__namespace.Note = function Note() {
	this.AObjectType = {dataType : "Integer", value : null};
	this.Comment = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CreatedBy = {dataType : "User", value : null};
	this.CreatedWhen = {dataType : "DateTime64", value : null};
	this.HandledBy = {dataType : "User", value : null};
	this.HandledWhen = {dataType : "DateTime64", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.Kind = {dataType : "NoteKind", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.References = {dataType : "ObjectReferenceArray", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.Status = {dataType : "NoteStatus", value : null};
	this.Text = {dataType : "WideString", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.UserProperties = {dataType : "WideString", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Note.prototype = new RemObjects.SDK.ROStructType();
__namespace.Note.prototype.constructor = __namespace.Note;
RemObjects.SDK.RTTI["Note"] = __namespace.Note;

// Struct: Share
__namespace.Share = function Share() {
	this.AccessibleBy = {dataType : "User", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Share.prototype = new RemObjects.SDK.ROStructType();
__namespace.Share.prototype.constructor = __namespace.Share;
RemObjects.SDK.RTTI["Share"] = __namespace.Share;

// Struct: User
__namespace.User = function User() {
	this.ActiveSpace = {dataType : "Int64", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.DefaultSpaceType = {dataType : "SpaceType", value : null};
	this.Email = {dataType : "WideString", value : null};
	this.ExternalName = {dataType : "WideString", value : null};
	this.FirstName = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.Initials = {dataType : "WideString", value : null};
	this.InsideMySpace = {dataType : "Boolean", value : null};
	this.IsAnonymousUser = {dataType : "Boolean", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsTranslator = {dataType : "Boolean", value : null};
	this.LanguageCode = {dataType : "AnsiString", value : null};
	this.LastName = {dataType : "WideString", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Organization = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.ScheduleEngine = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.UserRoles = {dataType : "Integer", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.WantsNewsletter = {dataType : "Boolean", value : null};
	this.XML = {dataType : "WideString", value : null};
};
__namespace.User.prototype = new RemObjects.SDK.ROStructType();
__namespace.User.prototype.constructor = __namespace.User;
RemObjects.SDK.RTTI["User"] = __namespace.User;

// Struct: Space
__namespace.Space = function Space() {
	this.Administrators = {dataType : "UserArray", value : null};
	this.AutoScheduleLastRun = {dataType : "DateTime64", value : null};
	this.AutoScheduleTime = {dataType : "DateTime64", value : null};
	this.Configuration = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CreatedBy = {dataType : "User", value : null};
	this.CreatedWhen = {dataType : "DateTime64", value : null};
	this.EmailConfiguration = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsActive = {dataType : "Boolean", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.JiraClientID = {dataType : "WideString", value : null};
	this.Kind = {dataType : "SpaceType", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Name = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.Status = {dataType : "SpaceStatus", value : null};
	this.Strategy = {dataType : "ScheduleStrategy", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Space.prototype = new RemObjects.SDK.ROStructType();
__namespace.Space.prototype.constructor = __namespace.Space;
RemObjects.SDK.RTTI["Space"] = __namespace.Space;

// Struct: ResourceRequirementPropertyValue
__namespace.ResourceRequirementPropertyValue = function ResourceRequirementPropertyValue() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.PropertyID = {dataType : "Int64", value : null};
	this.PropertyOperator = {dataType : "Integer", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Value = {dataType : "WideString", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.ResourceRequirementPropertyValue.prototype = new RemObjects.SDK.ROStructType();
__namespace.ResourceRequirementPropertyValue.prototype.constructor = __namespace.ResourceRequirementPropertyValue;
RemObjects.SDK.RTTI["ResourceRequirementPropertyValue"] = __namespace.ResourceRequirementPropertyValue;

// Struct: ResourcePropertyValue
__namespace.ResourcePropertyValue = function ResourcePropertyValue() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.PropertyID = {dataType : "Int64", value : null};
	this.ResourceClassID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Value = {dataType : "WideString", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.ResourcePropertyValue.prototype = new RemObjects.SDK.ROStructType();
__namespace.ResourcePropertyValue.prototype.constructor = __namespace.ResourcePropertyValue;
RemObjects.SDK.RTTI["ResourcePropertyValue"] = __namespace.ResourcePropertyValue;

// Struct: BudgetItem
__namespace.BudgetItem = function BudgetItem() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.GroupID = {dataType : "Int64", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsProjectBudgetValue = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.PropertyID = {dataType : "Int64", value : null};
	this.Quantity = {dataType : "Double", value : null};
	this.Rate = {dataType : "Double", value : null};
	this.ResourceClassID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.TaskID = {dataType : "Int64", value : null};
	this.Total = {dataType : "Double", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Value = {dataType : "WideString", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.BudgetItem.prototype = new RemObjects.SDK.ROStructType();
__namespace.BudgetItem.prototype.constructor = __namespace.BudgetItem;
RemObjects.SDK.RTTI["BudgetItem"] = __namespace.BudgetItem;

// Struct: UnitOfMeasure
__namespace.UnitOfMeasure = function UnitOfMeasure() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.DataType = {dataType : "WideString", value : null};
	this.DefaultValue = {dataType : "WideString", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.MultiLine = {dataType : "Boolean", value : null};
	this.MultiSelect = {dataType : "Boolean", value : null};
	this.PickList = {dataType : "WideString", value : null};
	this.PropertyMapping = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.SubProperty = {dataType : "WideString", value : null};
	this.Symbol = {dataType : "WideString", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.UomIsDefault = {dataType : "Boolean", value : null};
	this.UomName = {dataType : "WideString", value : null};
	this.UomPeriod = {dataType : "Timespan", value : null};
	this.UomRate = {dataType : "Double", value : null};
	this.UpdateTrigger = {dataType : "WideString", value : null};
	this.UserMayAddNewValues = {dataType : "Boolean", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.UnitOfMeasure.prototype = new RemObjects.SDK.ROStructType();
__namespace.UnitOfMeasure.prototype.constructor = __namespace.UnitOfMeasure;
RemObjects.SDK.RTTI["UnitOfMeasure"] = __namespace.UnitOfMeasure;

// Struct: ResourceClassProperty
__namespace.ResourceClassProperty = function ResourceClassProperty() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.UOMID = {dataType : "Int64", value : null};
	this.ValuePickList = {dataType : "WideString", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.ResourceClassProperty.prototype = new RemObjects.SDK.ROStructType();
__namespace.ResourceClassProperty.prototype.constructor = __namespace.ResourceClassProperty;
RemObjects.SDK.RTTI["ResourceClassProperty"] = __namespace.ResourceClassProperty;

// Struct: Resource
__namespace.Resource = function Resource() {
	this.AllowMultiTasking = {dataType : "Boolean", value : null};
	this.CalendarID = {dataType : "Int64", value : null};
	this.ClassIDs = {dataType : "Int64Array", value : null};
	this.Comments = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CoWorkers = {dataType : "CoWorkerArray", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ExternalRate = {dataType : "Currency", value : null};
	this.Holidays = {dataType : "HolidayArray", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.InService = {dataType : "DateTime64", value : null};
	this.InternalRate = {dataType : "Currency", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.NettoAvailability = {dataType : "Double", value : null};
	this.OutOfService = {dataType : "DateTime64", value : null};
	this.PropertyValues = {dataType : "ResourcePropertyValueArray", value : null};
	this.Reference = {dataType : "WideString", value : null};
	this.ResourceManager = {dataType : "User", value : null};
	this.ResourceUser = {dataType : "User", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Resource.prototype = new RemObjects.SDK.ROStructType();
__namespace.Resource.prototype.constructor = __namespace.Resource;
RemObjects.SDK.RTTI["Resource"] = __namespace.Resource;

// Struct: EPMResource
__namespace.EPMResource = function EPMResource() {
	this.AllowMultiTasking = {dataType : "Boolean", value : null};
	this.CalendarID = {dataType : "Int64", value : null};
	this.ClassIDs = {dataType : "Int64Array", value : null};
	this.Comments = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CoWorkers = {dataType : "CoWorkerArray", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ExternalRate = {dataType : "Currency", value : null};
	this.Holidays = {dataType : "HolidayArray", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.InService = {dataType : "DateTime64", value : null};
	this.InternalRate = {dataType : "Currency", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.NettoAvailability = {dataType : "Double", value : null};
	this.OutOfService = {dataType : "DateTime64", value : null};
	this.PropertyValues = {dataType : "ResourcePropertyValueArray", value : null};
	this.Reference = {dataType : "WideString", value : null};
	this.ResourceIsGeneric = {dataType : "Boolean", value : null};
	this.ResourceManager = {dataType : "User", value : null};
	this.ResourceUser = {dataType : "User", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.EPMResource.prototype = new RemObjects.SDK.ROStructType();
__namespace.EPMResource.prototype.constructor = __namespace.EPMResource;
RemObjects.SDK.RTTI["EPMResource"] = __namespace.EPMResource;

// Struct: ResourceClass
__namespace.ResourceClass = function ResourceClass() {
	this.AvailabilityProfile = {dataType : "WideString", value : null};
	this.CalendarID = {dataType : "Int64", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ExternalRate = {dataType : "Currency", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.InternalRate = {dataType : "Currency", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LevelResourcesAcrossProjects = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.MinimumAvailabilityRequired = {dataType : "Timespan", value : null};
	this.NormPointsPerWeek = {dataType : "Double", value : null};
	this.NormReliability = {dataType : "Integer", value : null};
	this.PipelineAvailability = {dataType : "Double", value : null};
	this.Properties = {dataType : "ResourceClassPropertyArray", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.ScheduleAcrossShifts = {dataType : "Integer", value : null};
	this.StartDate = {dataType : "DateTime64", value : null};
	this.TeamManagers = {dataType : "UserArray", value : null};
	this.TypeOfClass = {dataType : "ResourceClassType", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.UomID = {dataType : "Int64", value : null};
	this.UomName = {dataType : "WideString", value : null};
	this.UomPeriod = {dataType : "Timespan", value : null};
	this.UomRate = {dataType : "Double", value : null};
	this.UomRateHours = {dataType : "Double", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.VirtualResourceAvailability = {dataType : "Double", value : null};
};
__namespace.ResourceClass.prototype = new RemObjects.SDK.ROStructType();
__namespace.ResourceClass.prototype.constructor = __namespace.ResourceClass;
RemObjects.SDK.RTTI["ResourceClass"] = __namespace.ResourceClass;

// Struct: ResourceRequirement
__namespace.ResourceRequirement = function ResourceRequirement() {
	this.ChangedBy = {dataType : "Int64", value : null};
	this.ChangedWhen = {dataType : "DateTime64", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CurrentEttcUnitOfMeasure = {dataType : "Int64", value : null};
	this.Duration = {dataType : "Timespan", value : null};
	this.HideFromUser = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsLevelOfEffort = {dataType : "Boolean", value : null};
	this.IsYou = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.MemberOfTeam_Rq_ID = {dataType : "Int64", value : null};
	this.OriginalEttcUnitOfMeasure = {dataType : "Int64", value : null};
	this.ProgressDate = {dataType : "DateTime64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.Properties = {dataType : "ResourceRequirementPropertyValueArray", value : null};
	this.ResourceClassID = {dataType : "Int64", value : null};
	this.ResourceID = {dataType : "Int64", value : null};
	this.ResourceIsSoftAssigned = {dataType : "Boolean", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.ScheduleCoWorkers = {dataType : "Boolean", value : null};
	this.Status = {dataType : "Integer", value : null};
	this.TaskID = {dataType : "Int64", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Units = {dataType : "Double", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.WorkRemaining = {dataType : "Timespan", value : null};
	this.XML = {dataType : "WideString", value : null};
};
__namespace.ResourceRequirement.prototype = new RemObjects.SDK.ROStructType();
__namespace.ResourceRequirement.prototype.constructor = __namespace.ResourceRequirement;
RemObjects.SDK.RTTI["ResourceRequirement"] = __namespace.ResourceRequirement;

// Struct: TaskDependency
__namespace.TaskDependency = function TaskDependency() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.Lag = {dataType : "Timespan", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.PredecessorID = {dataType : "Int64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.Relation = {dataType : "Integer", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.TaskID = {dataType : "Int64", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.TaskDependency.prototype = new RemObjects.SDK.ROStructType();
__namespace.TaskDependency.prototype.constructor = __namespace.TaskDependency;
RemObjects.SDK.RTTI["TaskDependency"] = __namespace.TaskDependency;

// Struct: TaskDependencyExternal
__namespace.TaskDependencyExternal = function TaskDependencyExternal() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsPredecessor = {dataType : "Boolean", value : null};
	this.Lag = {dataType : "Timespan", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.PredecessorID = {dataType : "Int64", value : null};
	this.PredecessorOrSuccessor = {dataType : "Task", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.Relation = {dataType : "Integer", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.TaskID = {dataType : "Int64", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.TaskDependencyExternal.prototype = new RemObjects.SDK.ROStructType();
__namespace.TaskDependencyExternal.prototype.constructor = __namespace.TaskDependencyExternal;
RemObjects.SDK.RTTI["TaskDependencyExternal"] = __namespace.TaskDependencyExternal;

// Struct: Task
__namespace.Task = function Task() {
	this.ActualStart = {dataType : "DateTime64", value : null};
	this.ActualStop = {dataType : "DateTime64", value : null};
	this.AutoExpand = {dataType : "Boolean", value : null};
	this.AutoUpdate = {dataType : "Boolean", value : null};
	this.AutoUpdatedWhen = {dataType : "DateTime64", value : null};
	this.Comments = {dataType : "WideString", value : null};
	this.Comments2 = {dataType : "WideString", value : null};
	this.Constraint = {dataType : "TaskConstraint", value : null};
	this.ConstraintDate = {dataType : "DateTime64", value : null};
	this.ConstraintMakespan = {dataType : "TimeInterval", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CurrentEttcUnitOfMeasure = {dataType : "Int64", value : null};
	this.Deadline = {dataType : "DateTime64", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.Duration = {dataType : "Timespan", value : null};
	this.DurationFromCardDeadlines = {dataType : "Boolean", value : null};
	this.Expanded = {dataType : "Boolean", value : null};
	this.FixedDuration = {dataType : "Boolean", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsOnOriginalCC = {dataType : "Boolean", value : null};
	this.Locked = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.OriginalEttcUnitOfMeasure = {dataType : "Int64", value : null};
	this.ParentID = {dataType : "Int64", value : null};
	this.Priority = {dataType : "Integer", value : null};
	this.Progress = {dataType : "Integer", value : null};
	this.ProgressDate = {dataType : "DateTime64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.PropertyValues = {dataType : "WideString", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.Rollup = {dataType : "Boolean", value : null};
	this.RowID = {dataType : "Integer", value : null};
	this.ScheduledStopDateOnTaskStart = {dataType : "DateTime64", value : null};
	this.Size = {dataType : "Double", value : null};
	this.SortOrder = {dataType : "Integer", value : null};
	this.StageID = {dataType : "Int64", value : null};
	this.Status = {dataType : "Integer", value : null};
	this.TaskManagers = {dataType : "UserArray", value : null};
	this.TaskType = {dataType : "Integer", value : null};
	this.TeamHasDesignRole = {dataType : "Boolean", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.UomID = {dataType : "Int64", value : null};
	this.Version = {dataType : "Int64", value : null};
	this.VisualProperties = {dataType : "WideString", value : null};
	this.WorkRemaining = {dataType : "Timespan", value : null};
	this._ScheduleData = {dataType : "ScheduleData", value : null};
};
__namespace.Task.prototype = new RemObjects.SDK.ROStructType();
__namespace.Task.prototype.constructor = __namespace.Task;
RemObjects.SDK.RTTI["Task"] = __namespace.Task;

// Struct: Project
__namespace.Project = function Project() {
	this.AllowPushOutEnd = {dataType : "Boolean", value : null};
	this.AllowPushOutStart = {dataType : "Boolean", value : null};
	this.AllowTaskSplitting = {dataType : "Boolean", value : null};
	this.AutoBalanceResourceRequirements = {dataType : "Boolean", value : null};
	this.AutoSchedule = {dataType : "Boolean", value : null};
	this.CalendarID = {dataType : "Int64", value : null};
	this.ccConsumeFeedingBuffers = {dataType : "Boolean", value : null};
	this.ccConsumeMilestoneBuffers = {dataType : "Boolean", value : null};
	this.ccExpectedBufferConsumptionPct = {dataType : "Double", value : null};
	this.ccFeedingBufferPct = {dataType : "Double", value : null};
	this.ccMarkCC = {dataType : "Boolean", value : null};
	this.ccMilestoneBufferPct = {dataType : "Double", value : null};
	this.ccProjectBufferPct = {dataType : "Double", value : null};
	this.ccTaskDurationPct = {dataType : "Double", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.CriticalChain = {dataType : "Chain", value : null};
	this.DaysPerMonth = {dataType : "Integer", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.HoursPerDay = {dataType : "Timespan", value : null};
	this.HoursPerWeek = {dataType : "Timespan", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsStagingProject = {dataType : "Boolean", value : null};
	this.IsTemplate = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.MasterProjectID = {dataType : "Int64", value : null};
	this.MilestoneBufferTags = {dataType : "BufferTagArray", value : null};
	this.Priority = {dataType : "Integer", value : null};
	this.ProjectManager = {dataType : "User", value : null};
	this.ProjectPropertyValues = {dataType : "WideString", value : null};
	this.Reference = {dataType : "WideString", value : null};
	this.ReleaseDate = {dataType : "DateTime64", value : null};
	this.ReleaseOrder = {dataType : "Integer", value : null};
	this.ResourceAvailability = {dataType : "ResourceAvailabilityArray", value : null};
	this.ResourceRequirements = {dataType : "ResourceRequirementArray", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.ScheduleEngine = {dataType : "Integer", value : null};
	this.ScheduleSort = {dataType : "Integer", value : null};
	this.ScheduleToOriginalPlan = {dataType : "Boolean", value : null};
	this.Start = {dataType : "DateTime64", value : null};
	this.StartDateType = {dataType : "Integer", value : null};
	this.Status = {dataType : "Integer", value : null};
	this.Stop = {dataType : "DateTime64", value : null};
	this.StopDateType = {dataType : "Integer", value : null};
	this.Tags = {dataType : "TagArray", value : null};
	this.TaskDependencies = {dataType : "TaskDependencyArray", value : null};
	this.Tasks = {dataType : "TaskArray", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Project.prototype = new RemObjects.SDK.ROStructType();
__namespace.Project.prototype.constructor = __namespace.Project;
RemObjects.SDK.RTTI["Project"] = __namespace.Project;

// Struct: CalendarRule
__namespace.CalendarRule = function CalendarRule() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Count = {dataType : "Integer", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.IsWorking = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.Occurrences = {dataType : "Integer", value : null};
	this.RangeEnd = {dataType : "DateTime64", value : null};
	this.RangeStart = {dataType : "DateTime64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.Start = {dataType : "DateTime64", value : null};
	this.Stop = {dataType : "DateTime64", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.CalendarRule.prototype = new RemObjects.SDK.ROStructType();
__namespace.CalendarRule.prototype.constructor = __namespace.CalendarRule;
RemObjects.SDK.RTTI["CalendarRule"] = __namespace.CalendarRule;

// Struct: Calendar
__namespace.Calendar = function Calendar() {
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.IsExternal = {dataType : "Boolean", value : null};
	this.LUID = {dataType : "WideString", value : null};
	this.ParentID = {dataType : "Int64", value : null};
	this.Rights = {dataType : "Integer", value : null};
	this.Roles = {dataType : "Integer", value : null};
	this.Rules = {dataType : "CalendarRuleArray", value : null};
	this.UID = {dataType : "Guid", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.Calendar.prototype = new RemObjects.SDK.ROStructType();
__namespace.Calendar.prototype.constructor = __namespace.Calendar;
RemObjects.SDK.RTTI["Calendar"] = __namespace.Calendar;

// Struct: ClientView
__namespace.ClientView = function ClientView() {
	this.Projects = {dataType : "Int64Array", value : null};
	this.SpaceID = {dataType : "Int64", value : null};
};
__namespace.ClientView.prototype = new RemObjects.SDK.ROStructType();
__namespace.ClientView.prototype.constructor = __namespace.ClientView;
RemObjects.SDK.RTTI["ClientView"] = __namespace.ClientView;

// Struct: SessionState
__namespace.SessionState = function SessionState() {
	this.DefaultSpace = {dataType : "Int64", value : null};
	this.OK = {dataType : "Boolean", value : null};
};
__namespace.SessionState.prototype = new RemObjects.SDK.ROStructType();
__namespace.SessionState.prototype.constructor = __namespace.SessionState;
RemObjects.SDK.RTTI["SessionState"] = __namespace.SessionState;

// Struct: DateTime64
__namespace.DateTime64 = function DateTime64() {
	this.Ticks = {dataType : "Int64", value : null};
};
__namespace.DateTime64.prototype = new RemObjects.SDK.ROStructType();
__namespace.DateTime64.prototype.constructor = __namespace.DateTime64;
RemObjects.SDK.RTTI["DateTime64"] = __namespace.DateTime64;

// Struct: ServerStatusInformation
__namespace.ServerStatusInformation = function ServerStatusInformation() {
	this.ActiveSessions = {dataType : "Integer", value : null};
	this.Cache = {dataType : "ObjectCacheProperties", value : null};
	this.EventObjectsInCache = {dataType : "Integer", value : null};
	this.EventObjectsResent = {dataType : "Int64", value : null};
	this.EventObjectsSent = {dataType : "Int64", value : null};
	this.LongCallsTotal = {dataType : "Integer", value : null};
	this.LongCalls_Last10Min = {dataType : "Integer", value : null};
	this.RequestsHandled = {dataType : "Int64", value : null};
	this.Started = {dataType : "DateTime64", value : null};
};
__namespace.ServerStatusInformation.prototype = new RemObjects.SDK.ROStructType();
__namespace.ServerStatusInformation.prototype.constructor = __namespace.ServerStatusInformation;
RemObjects.SDK.RTTI["ServerStatusInformation"] = __namespace.ServerStatusInformation;

// Struct: ObjectCacheProperties
__namespace.ObjectCacheProperties = function ObjectCacheProperties() {
	this.HitPercentage = {dataType : "Integer", value : null};
	this.MaxSize = {dataType : "Int64", value : null};
	this.Size = {dataType : "Int64", value : null};
};
__namespace.ObjectCacheProperties.prototype = new RemObjects.SDK.ROStructType();
__namespace.ObjectCacheProperties.prototype.constructor = __namespace.ObjectCacheProperties;
RemObjects.SDK.RTTI["ObjectCacheProperties"] = __namespace.ObjectCacheProperties;

// Struct: ProjectTracking
__namespace.ProjectTracking = function ProjectTracking() {
	this.Activities = {dataType : "ActivityTrackingArray", value : null};
	this.Details = {dataType : "TimeTrackDetailArray", value : null};
	this.Total = {dataType : "Timespan", value : null};
	this._Project = {dataType : "Project", value : null};
};
__namespace.ProjectTracking.prototype = new RemObjects.SDK.ROStructType();
__namespace.ProjectTracking.prototype.constructor = __namespace.ProjectTracking;
RemObjects.SDK.RTTI["ProjectTracking"] = __namespace.ProjectTracking;

// Struct: ActivityTracking
__namespace.ActivityTracking = function ActivityTracking() {
	this.Total = {dataType : "Timespan", value : null};
	this._Activity = {dataType : "Activity", value : null};
};
__namespace.ActivityTracking.prototype = new RemObjects.SDK.ROStructType();
__namespace.ActivityTracking.prototype.constructor = __namespace.ActivityTracking;
RemObjects.SDK.RTTI["ActivityTracking"] = __namespace.ActivityTracking;

// Struct: Tag
__namespace.Tag = function Tag() {
	this.BufferConsumed = {dataType : "Double", value : null};
	this.BufferZone = {dataType : "Integer", value : null};
	this.CalculatedFinish = {dataType : "DateTime64", value : null};
	this.CreatedBy = {dataType : "User", value : null};
	this.CreatedWhen = {dataType : "DateTime64", value : null};
	this.CriticalBufferTaskID = {dataType : "Int64", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.LongestChainComplete = {dataType : "Double", value : null};
	this.ProjectFinish = {dataType : "DateTime64", value : null};
	this.ProjectLateFinish = {dataType : "DateTime64", value : null};
	this.ProjectStart = {dataType : "DateTime64", value : null};
	this.TotalWorkRemaining = {dataType : "Timespan", value : null};
	this.VBufferSize = {dataType : "Timespan", value : null};
	this.Version = {dataType : "Integer", value : null};
};
__namespace.Tag.prototype = new RemObjects.SDK.ROStructType();
__namespace.Tag.prototype.constructor = __namespace.Tag;
RemObjects.SDK.RTTI["Tag"] = __namespace.Tag;

// Struct: NamedObjectWithID
__namespace.NamedObjectWithID = function NamedObjectWithID() {
	this.ID = {dataType : "Int64", value : null};
	this.Name = {dataType : "WideString", value : null};
};
__namespace.NamedObjectWithID.prototype = new RemObjects.SDK.ROStructType();
__namespace.NamedObjectWithID.prototype.constructor = __namespace.NamedObjectWithID;
RemObjects.SDK.RTTI["NamedObjectWithID"] = __namespace.NamedObjectWithID;

// Struct: ObjectDependency
__namespace.ObjectDependency = function ObjectDependency() {
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
	this.ObjectType = {dataType : "Integer", value : null};
	this.Relation = {dataType : "WideString", value : null};
};
__namespace.ObjectDependency.prototype = new RemObjects.SDK.ROStructType();
__namespace.ObjectDependency.prototype.constructor = __namespace.ObjectDependency;
RemObjects.SDK.RTTI["ObjectDependency"] = __namespace.ObjectDependency;

// Struct: ResourceAvailability
__namespace.ResourceAvailability = function ResourceAvailability() {
	this.Availability = {dataType : "Double", value : null};
	this.AvailabilityProfile = {dataType : "WideString", value : null};
	this.CalendarID = {dataType : "Int64", value : null};
	this.PropertyClassProperties = {dataType : "WideString", value : null};
	this.ResourceClassID = {dataType : "Int64", value : null};
	this.ResourceIDs = {dataType : "Int64Array", value : null};
};
__namespace.ResourceAvailability.prototype = new RemObjects.SDK.ROStructType();
__namespace.ResourceAvailability.prototype.constructor = __namespace.ResourceAvailability;
RemObjects.SDK.RTTI["ResourceAvailability"] = __namespace.ResourceAvailability;

// Struct: ScheduleInterval
__namespace.ScheduleInterval = function ScheduleInterval() {
	this.RequirementID = {dataType : "Int64", value : null};
	this.ResourceID = {dataType : "Int64", value : null};
	this.SoftAssignment = {dataType : "Boolean", value : null};
	this.Start = {dataType : "DateTime64", value : null};
	this.Stop = {dataType : "DateTime64", value : null};
};
__namespace.ScheduleInterval.prototype = new RemObjects.SDK.ROStructType();
__namespace.ScheduleInterval.prototype.constructor = __namespace.ScheduleInterval;
RemObjects.SDK.RTTI["ScheduleInterval"] = __namespace.ScheduleInterval;

// Struct: ScheduleStatistics
__namespace.ScheduleStatistics = function ScheduleStatistics() {
	this.BufferConsumed = {dataType : "Double", value : null};
	this.BufferZone = {dataType : "Integer", value : null};
	this.CalculatedFinish = {dataType : "DateTime64", value : null};
	this.CriticalBufferTaskID = {dataType : "Int64", value : null};
	this.LongestChainComplete = {dataType : "Double", value : null};
	this.MilestoneBufferStatistics = {dataType : "BufferTagArray", value : null};
	this.ProjectEarlyFinish = {dataType : "DateTime64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.ProjectLateFinish = {dataType : "DateTime64", value : null};
	this.ProjectStart = {dataType : "DateTime64", value : null};
	this.ScheduleMessages = {dataType : "StringArray", value : null};
	this.SchedulerCompleted = {dataType : "Boolean", value : null};
	this.TotalTasks = {dataType : "Integer", value : null};
	this.TotalWork = {dataType : "Timespan", value : null};
};
__namespace.ScheduleStatistics.prototype = new RemObjects.SDK.ROStructType();
__namespace.ScheduleStatistics.prototype.constructor = __namespace.ScheduleStatistics;
RemObjects.SDK.RTTI["ScheduleStatistics"] = __namespace.ScheduleStatistics;

// Struct: ResourceClassStatistics
__namespace.ResourceClassStatistics = function ResourceClassStatistics() {
	this.ResourceClassID = {dataType : "Int64", value : null};
	this.TaskCountReadyToStart = {dataType : "Integer", value : null};
	this.TaskCountStarted = {dataType : "Integer", value : null};
	this.TotalWork = {dataType : "Timespan", value : null};
	this.TotalWorkReadyToStart = {dataType : "Timespan", value : null};
	this.TotalWorkStarted = {dataType : "Timespan", value : null};
	this.WIP_Hours_14_days = {dataType : "Timespan", value : null};
	this.WIP_Hours_30_days = {dataType : "Timespan", value : null};
	this.WIP_Hours_7_days = {dataType : "Timespan", value : null};
	this.WIP_Pct_14_days = {dataType : "Double", value : null};
	this.WIP_Pct_30_days = {dataType : "Double", value : null};
	this.WIP_Pct_7_days = {dataType : "Double", value : null};
};
__namespace.ResourceClassStatistics.prototype = new RemObjects.SDK.ROStructType();
__namespace.ResourceClassStatistics.prototype.constructor = __namespace.ResourceClassStatistics;
RemObjects.SDK.RTTI["ResourceClassStatistics"] = __namespace.ResourceClassStatistics;

// Struct: TimeInterval
__namespace.TimeInterval = function TimeInterval() {
	this.Start = {dataType : "DateTime64", value : null};
	this.Stop = {dataType : "DateTime64", value : null};
};
__namespace.TimeInterval.prototype = new RemObjects.SDK.ROStructType();
__namespace.TimeInterval.prototype.constructor = __namespace.TimeInterval;
RemObjects.SDK.RTTI["TimeInterval"] = __namespace.TimeInterval;

// Struct: CustomField
__namespace.CustomField = function CustomField() {
	this.Name = {dataType : "WideString", value : null};
	this.Uid = {dataType : "Guid", value : null};
};
__namespace.CustomField.prototype = new RemObjects.SDK.ROStructType();
__namespace.CustomField.prototype.constructor = __namespace.CustomField;
RemObjects.SDK.RTTI["CustomField"] = __namespace.CustomField;

// Struct: LogEntry
__namespace.LogEntry = function LogEntry() {
	this.EnventTickCount = {dataType : "Int64", value : null};
	this.EventID = {dataType : "Integer", value : null};
	this.Level = {dataType : "Integer", value : null};
	this.MethodName = {dataType : "AnsiString", value : null};
	this.ObjectCount = {dataType : "Integer", value : null};
	this.PartitioningKey = {dataType : "AnsiString", value : null};
	this.Pid = {dataType : "Integer", value : null};
	this.Role = {dataType : "AnsiString", value : null};
	this.RoleInstance = {dataType : "AnsiString", value : null};
	this.RowKey = {dataType : "AnsiString", value : null};
	this.SessionID = {dataType : "Guid", value : null};
	this.TickCount = {dataType : "Int64", value : null};
	this.Tid = {dataType : "Integer", value : null};
	this.Timestamp = {dataType : "DateTime64", value : null};
	this.UserID = {dataType : "Int64", value : null};
};
__namespace.LogEntry.prototype = new RemObjects.SDK.ROStructType();
__namespace.LogEntry.prototype.constructor = __namespace.LogEntry;
RemObjects.SDK.RTTI["LogEntry"] = __namespace.LogEntry;

// Struct: BufferTag
__namespace.BufferTag = function BufferTag() {
	this.BufferConsumed = {dataType : "Double", value : null};
	this.BufferZone = {dataType : "Integer", value : null};
	this.ChainComplete = {dataType : "Double", value : null};
	this.CreatedWhen = {dataType : "DateTime64", value : null};
	this.CurrentChainDuration = {dataType : "Int64", value : null};
	this.FeadingChain = {dataType : "AnsiString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.OriginalChainDuration = {dataType : "Int64", value : null};
	this.TaskID = {dataType : "Int64", value : null};
};
__namespace.BufferTag.prototype = new RemObjects.SDK.ROStructType();
__namespace.BufferTag.prototype.constructor = __namespace.BufferTag;
RemObjects.SDK.RTTI["BufferTag"] = __namespace.BufferTag;

// Struct: ProjectStage
__namespace.ProjectStage = function ProjectStage() {
	this.Duration = {dataType : "Timespan", value : null};
	this.EndDate = {dataType : "DateTime64", value : null};
	this.IsActive = {dataType : "Boolean", value : null};
	this.StageID = {dataType : "Guid", value : null};
	this.StartDate = {dataType : "DateTime64", value : null};
};
__namespace.ProjectStage.prototype = new RemObjects.SDK.ROStructType();
__namespace.ProjectStage.prototype.constructor = __namespace.ProjectStage;
RemObjects.SDK.RTTI["ProjectStage"] = __namespace.ProjectStage;

// Struct: CardComment
__namespace.CardComment = function CardComment() {
	this.CreatedBy = {dataType : "User", value : null};
	this.CreatedWhen = {dataType : "DateTime64", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Text = {dataType : "WideString", value : null};
};
__namespace.CardComment.prototype = new RemObjects.SDK.ROStructType();
__namespace.CardComment.prototype.constructor = __namespace.CardComment;
RemObjects.SDK.RTTI["CardComment"] = __namespace.CardComment;

// Struct: UpdateInfo
__namespace.UpdateInfo = function UpdateInfo() {
	this.ExtraInfo = {dataType : "WideString", value : null};
	this.Failed = {dataType : "Boolean", value : null};
	this.NewID = {dataType : "Int64", value : null};
	this.State = {dataType : "UpdateState", value : null};
};
__namespace.UpdateInfo.prototype = new RemObjects.SDK.ROStructType();
__namespace.UpdateInfo.prototype.constructor = __namespace.UpdateInfo;
RemObjects.SDK.RTTI["UpdateInfo"] = __namespace.UpdateInfo;

// Struct: CardHistoryItem
__namespace.CardHistoryItem = function CardHistoryItem() {
	this.CardID = {dataType : "Int64", value : null};
	this.Comment = {dataType : "WideString", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.UpdateState = {dataType : "Integer", value : null};
	this.UserID = {dataType : "Int64", value : null};
	this.When = {dataType : "DateTime64", value : null};
};
__namespace.CardHistoryItem.prototype = new RemObjects.SDK.ROStructType();
__namespace.CardHistoryItem.prototype.constructor = __namespace.CardHistoryItem;
RemObjects.SDK.RTTI["CardHistoryItem"] = __namespace.CardHistoryItem;

// Struct: Icon
__namespace.Icon = function Icon() {
	this.Bytes = {dataType : "Binary", value : null};
	this.Height = {dataType : "Integer", value : null};
	this.Width = {dataType : "Integer", value : null};
};
__namespace.Icon.prototype = new RemObjects.SDK.ROStructType();
__namespace.Icon.prototype.constructor = __namespace.Icon;
RemObjects.SDK.RTTI["Icon"] = __namespace.Icon;

// Struct: Notification
__namespace.Notification = function Notification() {
	this.Description = {dataType : "WideString", value : null};
	this.Kind = {dataType : "Integer", value : null};
	this.ObjectDescription = {dataType : "WideString", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
	this.SendSelfMadeChanges = {dataType : "Boolean", value : null};
	this.SendToCO = {dataType : "Boolean", value : null};
	this.SendToPM = {dataType : "Boolean", value : null};
	this.SendToRM = {dataType : "Boolean", value : null};
	this.SendToRS = {dataType : "Boolean", value : null};
	this.SendToTM = {dataType : "Boolean", value : null};
};
__namespace.Notification.prototype = new RemObjects.SDK.ROStructType();
__namespace.Notification.prototype.constructor = __namespace.Notification;
RemObjects.SDK.RTTI["Notification"] = __namespace.Notification;

// Struct: PortfolioStatisticsItem
__namespace.PortfolioStatisticsItem = function PortfolioStatisticsItem() {
	this.ActualStart = {dataType : "DateTime64", value : null};
	this.ActualStop = {dataType : "DateTime64", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
	this.ObjectType = {dataType : "Integer", value : null};
	this.PausedWhen = {dataType : "DateTime64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.ReadyToStartWhen = {dataType : "DateTime64", value : null};
	this.ReleasedWhen = {dataType : "DateTime64", value : null};
	this.ResourceClassID = {dataType : "Int64", value : null};
	this.ResourceID = {dataType : "Int64", value : null};
	this.Status = {dataType : "Integer", value : null};
	this.TaskID = {dataType : "Int64", value : null};
	this.TaskType = {dataType : "Integer", value : null};
};
__namespace.PortfolioStatisticsItem.prototype = new RemObjects.SDK.ROStructType();
__namespace.PortfolioStatisticsItem.prototype.constructor = __namespace.PortfolioStatisticsItem;
RemObjects.SDK.RTTI["PortfolioStatisticsItem"] = __namespace.PortfolioStatisticsItem;

// Struct: StateVariable
__namespace.StateVariable = function StateVariable() {
	this.AType = {dataType : "ObjectType", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.Name = {dataType : "WideString", value : null};
	this.Value = {dataType : "WideString", value : null};
};
__namespace.StateVariable.prototype = new RemObjects.SDK.ROStructType();
__namespace.StateVariable.prototype.constructor = __namespace.StateVariable;
RemObjects.SDK.RTTI["StateVariable"] = __namespace.StateVariable;

// Struct: TranslateItem
__namespace.TranslateItem = function TranslateItem() {
	this.Hash = {dataType : "Integer", value : null};
	this.Info = {dataType : "UpdateInfo", value : null};
	this.Original = {dataType : "WideString", value : null};
	this.Translation = {dataType : "WideString", value : null};
	this.Version = {dataType : "Int64", value : null};
};
__namespace.TranslateItem.prototype = new RemObjects.SDK.ROStructType();
__namespace.TranslateItem.prototype.constructor = __namespace.TranslateItem;
RemObjects.SDK.RTTI["TranslateItem"] = __namespace.TranslateItem;

// Struct: Language
__namespace.Language = function Language() {
	this.Code = {dataType : "WideString", value : null};
	this.Name = {dataType : "WideString", value : null};
};
__namespace.Language.prototype = new RemObjects.SDK.ROStructType();
__namespace.Language.prototype.constructor = __namespace.Language;
RemObjects.SDK.RTTI["Language"] = __namespace.Language;

// Struct: TemplatePackage
__namespace.TemplatePackage = function TemplatePackage() {
	this.Comment = {dataType : "WideString", value : null};
	this.ContainsData = {dataType : "Boolean", value : null};
	this.Description = {dataType : "WideString", value : null};
	this.ID = {dataType : "Int64", value : null};
	this.OrderValue = {dataType : "Integer", value : null};
	this.Templates = {dataType : "TemplateArray", value : null};
};
__namespace.TemplatePackage.prototype = new RemObjects.SDK.ROStructType();
__namespace.TemplatePackage.prototype.constructor = __namespace.TemplatePackage;
RemObjects.SDK.RTTI["TemplatePackage"] = __namespace.TemplatePackage;

// Struct: SharedAccessUrl
__namespace.SharedAccessUrl = function SharedAccessUrl() {
	this.OriginalURL = {dataType : "WideString", value : null};
	this.SharedAccessURL = {dataType : "WideString", value : null};
};
__namespace.SharedAccessUrl.prototype = new RemObjects.SDK.ROStructType();
__namespace.SharedAccessUrl.prototype.constructor = __namespace.SharedAccessUrl;
RemObjects.SDK.RTTI["SharedAccessUrl"] = __namespace.SharedAccessUrl;

// Struct: ObjectReference
__namespace.ObjectReference = function ObjectReference() {
	this.AObjectType = {dataType : "ObjectType", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
};
__namespace.ObjectReference.prototype = new RemObjects.SDK.ROStructType();
__namespace.ObjectReference.prototype.constructor = __namespace.ObjectReference;
RemObjects.SDK.RTTI["ObjectReference"] = __namespace.ObjectReference;

// Struct: ObjectsRelation
__namespace.ObjectsRelation = function ObjectsRelation() {
	this.OwnerID = {dataType : "Int64", value : null};
	this.OwnerProjectID = {dataType : "Int64", value : null};
	this.OwnerTaskID = {dataType : "Int64", value : null};
	this.OwnerType = {dataType : "ObjectType", value : null};
	this.RelationID = {dataType : "Int64", value : null};
	this.RelationIsClosed = {dataType : "Boolean", value : null};
	this.RelationProjectID = {dataType : "Int64", value : null};
	this.RelationTaskID = {dataType : "Int64", value : null};
	this.RelationType = {dataType : "ObjectType", value : null};
};
__namespace.ObjectsRelation.prototype = new RemObjects.SDK.ROStructType();
__namespace.ObjectsRelation.prototype.constructor = __namespace.ObjectsRelation;
RemObjects.SDK.RTTI["ObjectsRelation"] = __namespace.ObjectsRelation;

// Struct: SVGImage
__namespace.SVGImage = function SVGImage() {
	this.Name = {dataType : "WideString", value : null};
	this.SVG = {dataType : "WideString", value : null};
};
__namespace.SVGImage.prototype = new RemObjects.SDK.ROStructType();
__namespace.SVGImage.prototype.constructor = __namespace.SVGImage;
RemObjects.SDK.RTTI["SVGImage"] = __namespace.SVGImage;

// Struct: Chain
__namespace.Chain = function Chain() {
	this.CurrentFeedingChain = {dataType : "WideString", value : null};
	this.CurrentFeedingChainDuration = {dataType : "Timespan", value : null};
	this.OriginalFeedingChain = {dataType : "WideString", value : null};
	this.OriginalFeedingChainDuration = {dataType : "Timespan", value : null};
};
__namespace.Chain.prototype = new RemObjects.SDK.ROStructType();
__namespace.Chain.prototype.constructor = __namespace.Chain;
RemObjects.SDK.RTTI["Chain"] = __namespace.Chain;

// Struct: SearchResultItem
__namespace.SearchResultItem = function SearchResultItem() {
	this.AObjectType = {dataType : "ObjectType", value : null};
	this.MatchingProperty = {dataType : "WideString", value : null};
	this.MatchingText = {dataType : "WideString", value : null};
	this.ObjectID = {dataType : "Int64", value : null};
	this.ProjectID = {dataType : "Int64", value : null};
	this.TaskID = {dataType : "Int64", value : null};
};
__namespace.SearchResultItem.prototype = new RemObjects.SDK.ROStructType();
__namespace.SearchResultItem.prototype.constructor = __namespace.SearchResultItem;
RemObjects.SDK.RTTI["SearchResultItem"] = __namespace.SearchResultItem;

// Struct: HistoryArrayObject
__namespace.HistoryArrayObject = function HistoryArrayObject() {
	this.HistoryItems = {dataType : "ProjectHistoryItemsArray", value : null};
	this.Marker = {dataType : "WideString", value : null};
};
__namespace.HistoryArrayObject.prototype = new RemObjects.SDK.ROStructType();
__namespace.HistoryArrayObject.prototype.constructor = __namespace.HistoryArrayObject;
RemObjects.SDK.RTTI["HistoryArrayObject"] = __namespace.HistoryArrayObject;


// Array: ActivityArray
__namespace.ActivityArray = function ActivityArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Activity";
};
__namespace.ActivityArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ActivityArray.prototype.constructor = __namespace.ActivityArray;
RemObjects.SDK.RTTI["ActivityArray"] = __namespace.ActivityArray;

// Array: ActivityTrackingArray
__namespace.ActivityTrackingArray = function ActivityTrackingArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ActivityTracking";
};
__namespace.ActivityTrackingArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ActivityTrackingArray.prototype.constructor = __namespace.ActivityTrackingArray;
RemObjects.SDK.RTTI["ActivityTrackingArray"] = __namespace.ActivityTrackingArray;

// Array: BudgetGroupArray
__namespace.BudgetGroupArray = function BudgetGroupArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "BudgetGroup";
};
__namespace.BudgetGroupArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.BudgetGroupArray.prototype.constructor = __namespace.BudgetGroupArray;
RemObjects.SDK.RTTI["BudgetGroupArray"] = __namespace.BudgetGroupArray;

// Array: BudgetItemArray
__namespace.BudgetItemArray = function BudgetItemArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "BudgetItem";
};
__namespace.BudgetItemArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.BudgetItemArray.prototype.constructor = __namespace.BudgetItemArray;
RemObjects.SDK.RTTI["BudgetItemArray"] = __namespace.BudgetItemArray;

// Array: BufferTagArray
__namespace.BufferTagArray = function BufferTagArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "BufferTag";
};
__namespace.BufferTagArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.BufferTagArray.prototype.constructor = __namespace.BufferTagArray;
RemObjects.SDK.RTTI["BufferTagArray"] = __namespace.BufferTagArray;

// Array: CalendarArray
__namespace.CalendarArray = function CalendarArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Calendar";
};
__namespace.CalendarArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.CalendarArray.prototype.constructor = __namespace.CalendarArray;
RemObjects.SDK.RTTI["CalendarArray"] = __namespace.CalendarArray;

// Array: CalendarRuleArray
__namespace.CalendarRuleArray = function CalendarRuleArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "CalendarRule";
};
__namespace.CalendarRuleArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.CalendarRuleArray.prototype.constructor = __namespace.CalendarRuleArray;
RemObjects.SDK.RTTI["CalendarRuleArray"] = __namespace.CalendarRuleArray;

// Array: CardArray
__namespace.CardArray = function CardArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Card";
};
__namespace.CardArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.CardArray.prototype.constructor = __namespace.CardArray;
RemObjects.SDK.RTTI["CardArray"] = __namespace.CardArray;

// Array: CardCommentArray
__namespace.CardCommentArray = function CardCommentArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "CardComment";
};
__namespace.CardCommentArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.CardCommentArray.prototype.constructor = __namespace.CardCommentArray;
RemObjects.SDK.RTTI["CardCommentArray"] = __namespace.CardCommentArray;

// Array: CardHistoryItemArray
__namespace.CardHistoryItemArray = function CardHistoryItemArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "CardHistoryItem";
};
__namespace.CardHistoryItemArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.CardHistoryItemArray.prototype.constructor = __namespace.CardHistoryItemArray;
RemObjects.SDK.RTTI["CardHistoryItemArray"] = __namespace.CardHistoryItemArray;

// Array: CoWorkerArray
__namespace.CoWorkerArray = function CoWorkerArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "CoWorker";
};
__namespace.CoWorkerArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.CoWorkerArray.prototype.constructor = __namespace.CoWorkerArray;
RemObjects.SDK.RTTI["CoWorkerArray"] = __namespace.CoWorkerArray;

// Array: CustomFieldArray
__namespace.CustomFieldArray = function CustomFieldArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "CustomField";
};
__namespace.CustomFieldArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.CustomFieldArray.prototype.constructor = __namespace.CustomFieldArray;
RemObjects.SDK.RTTI["CustomFieldArray"] = __namespace.CustomFieldArray;

// Array: DocumentArray
__namespace.DocumentArray = function DocumentArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Document";
};
__namespace.DocumentArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.DocumentArray.prototype.constructor = __namespace.DocumentArray;
RemObjects.SDK.RTTI["DocumentArray"] = __namespace.DocumentArray;

// Array: FileArray
__namespace.FileArray = function FileArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Guid";
};
__namespace.FileArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.FileArray.prototype.constructor = __namespace.FileArray;
RemObjects.SDK.RTTI["FileArray"] = __namespace.FileArray;

// Array: GuidArray
__namespace.GuidArray = function GuidArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Guid";
};
__namespace.GuidArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.GuidArray.prototype.constructor = __namespace.GuidArray;
RemObjects.SDK.RTTI["GuidArray"] = __namespace.GuidArray;

// Array: HolidayArray
__namespace.HolidayArray = function HolidayArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Holiday";
};
__namespace.HolidayArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.HolidayArray.prototype.constructor = __namespace.HolidayArray;
RemObjects.SDK.RTTI["HolidayArray"] = __namespace.HolidayArray;

// Array: IconArray
__namespace.IconArray = function IconArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Icon";
};
__namespace.IconArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.IconArray.prototype.constructor = __namespace.IconArray;
RemObjects.SDK.RTTI["IconArray"] = __namespace.IconArray;

// Array: Int64Array
__namespace.Int64Array = function Int64Array() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Int64";
};
__namespace.Int64Array.prototype = new RemObjects.SDK.ROArrayType();
__namespace.Int64Array.prototype.constructor = __namespace.Int64Array;
RemObjects.SDK.RTTI["Int64Array"] = __namespace.Int64Array;

// Array: JSONStringArray
__namespace.JSONStringArray = function JSONStringArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "WideString";
};
__namespace.JSONStringArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.JSONStringArray.prototype.constructor = __namespace.JSONStringArray;
RemObjects.SDK.RTTI["JSONStringArray"] = __namespace.JSONStringArray;

// Array: LanguageArray
__namespace.LanguageArray = function LanguageArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Language";
};
__namespace.LanguageArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.LanguageArray.prototype.constructor = __namespace.LanguageArray;
RemObjects.SDK.RTTI["LanguageArray"] = __namespace.LanguageArray;

// Array: LogEntryArray
__namespace.LogEntryArray = function LogEntryArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "LogEntry";
};
__namespace.LogEntryArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.LogEntryArray.prototype.constructor = __namespace.LogEntryArray;
RemObjects.SDK.RTTI["LogEntryArray"] = __namespace.LogEntryArray;

// Array: NamedObjectWithIDArray
__namespace.NamedObjectWithIDArray = function NamedObjectWithIDArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "NamedObjectWithID";
};
__namespace.NamedObjectWithIDArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.NamedObjectWithIDArray.prototype.constructor = __namespace.NamedObjectWithIDArray;
RemObjects.SDK.RTTI["NamedObjectWithIDArray"] = __namespace.NamedObjectWithIDArray;

// Array: NoteArray
__namespace.NoteArray = function NoteArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Note";
};
__namespace.NoteArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.NoteArray.prototype.constructor = __namespace.NoteArray;
RemObjects.SDK.RTTI["NoteArray"] = __namespace.NoteArray;

// Array: ObjectDependencyArray
__namespace.ObjectDependencyArray = function ObjectDependencyArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ObjectDependency";
};
__namespace.ObjectDependencyArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ObjectDependencyArray.prototype.constructor = __namespace.ObjectDependencyArray;
RemObjects.SDK.RTTI["ObjectDependencyArray"] = __namespace.ObjectDependencyArray;

// Array: ObjectReferenceArray
__namespace.ObjectReferenceArray = function ObjectReferenceArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ObjectReference";
};
__namespace.ObjectReferenceArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ObjectReferenceArray.prototype.constructor = __namespace.ObjectReferenceArray;
RemObjects.SDK.RTTI["ObjectReferenceArray"] = __namespace.ObjectReferenceArray;

// Array: ObjectsRelationArray
__namespace.ObjectsRelationArray = function ObjectsRelationArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ObjectsRelation";
};
__namespace.ObjectsRelationArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ObjectsRelationArray.prototype.constructor = __namespace.ObjectsRelationArray;
RemObjects.SDK.RTTI["ObjectsRelationArray"] = __namespace.ObjectsRelationArray;

// Array: ObjectTypeArray
__namespace.ObjectTypeArray = function ObjectTypeArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ObjectType";
};
__namespace.ObjectTypeArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ObjectTypeArray.prototype.constructor = __namespace.ObjectTypeArray;
RemObjects.SDK.RTTI["ObjectTypeArray"] = __namespace.ObjectTypeArray;

// Array: PortfolioStatisticsItemArray
__namespace.PortfolioStatisticsItemArray = function PortfolioStatisticsItemArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "PortfolioStatisticsItem";
};
__namespace.PortfolioStatisticsItemArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.PortfolioStatisticsItemArray.prototype.constructor = __namespace.PortfolioStatisticsItemArray;
RemObjects.SDK.RTTI["PortfolioStatisticsItemArray"] = __namespace.PortfolioStatisticsItemArray;

// Array: ProjectArray
__namespace.ProjectArray = function ProjectArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Project";
};
__namespace.ProjectArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ProjectArray.prototype.constructor = __namespace.ProjectArray;
RemObjects.SDK.RTTI["ProjectArray"] = __namespace.ProjectArray;

// Array: ProjectHistoryItemsArray
__namespace.ProjectHistoryItemsArray = function ProjectHistoryItemsArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ProjectHistoryItem";
};
__namespace.ProjectHistoryItemsArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ProjectHistoryItemsArray.prototype.constructor = __namespace.ProjectHistoryItemsArray;
RemObjects.SDK.RTTI["ProjectHistoryItemsArray"] = __namespace.ProjectHistoryItemsArray;

// Array: ProjectStageArray
__namespace.ProjectStageArray = function ProjectStageArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ProjectStage";
};
__namespace.ProjectStageArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ProjectStageArray.prototype.constructor = __namespace.ProjectStageArray;
RemObjects.SDK.RTTI["ProjectStageArray"] = __namespace.ProjectStageArray;

// Array: ProjectTrackingArray
__namespace.ProjectTrackingArray = function ProjectTrackingArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ProjectTracking";
};
__namespace.ProjectTrackingArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ProjectTrackingArray.prototype.constructor = __namespace.ProjectTrackingArray;
RemObjects.SDK.RTTI["ProjectTrackingArray"] = __namespace.ProjectTrackingArray;

// Array: ResourceArray
__namespace.ResourceArray = function ResourceArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Resource";
};
__namespace.ResourceArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourceArray.prototype.constructor = __namespace.ResourceArray;
RemObjects.SDK.RTTI["ResourceArray"] = __namespace.ResourceArray;

// Array: ResourceAvailabilityArray
__namespace.ResourceAvailabilityArray = function ResourceAvailabilityArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ResourceAvailability";
};
__namespace.ResourceAvailabilityArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourceAvailabilityArray.prototype.constructor = __namespace.ResourceAvailabilityArray;
RemObjects.SDK.RTTI["ResourceAvailabilityArray"] = __namespace.ResourceAvailabilityArray;

// Array: ResourceClassArray
__namespace.ResourceClassArray = function ResourceClassArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ResourceClass";
};
__namespace.ResourceClassArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourceClassArray.prototype.constructor = __namespace.ResourceClassArray;
RemObjects.SDK.RTTI["ResourceClassArray"] = __namespace.ResourceClassArray;

// Array: ResourceClassPropertyArray
__namespace.ResourceClassPropertyArray = function ResourceClassPropertyArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ResourceClassProperty";
};
__namespace.ResourceClassPropertyArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourceClassPropertyArray.prototype.constructor = __namespace.ResourceClassPropertyArray;
RemObjects.SDK.RTTI["ResourceClassPropertyArray"] = __namespace.ResourceClassPropertyArray;

// Array: ResourceClassStatisticsArray
__namespace.ResourceClassStatisticsArray = function ResourceClassStatisticsArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ResourceClassStatistics";
};
__namespace.ResourceClassStatisticsArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourceClassStatisticsArray.prototype.constructor = __namespace.ResourceClassStatisticsArray;
RemObjects.SDK.RTTI["ResourceClassStatisticsArray"] = __namespace.ResourceClassStatisticsArray;

// Array: ResourceClassWipArray
__namespace.ResourceClassWipArray = function ResourceClassWipArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ResourceClassWipItem";
};
__namespace.ResourceClassWipArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourceClassWipArray.prototype.constructor = __namespace.ResourceClassWipArray;
RemObjects.SDK.RTTI["ResourceClassWipArray"] = __namespace.ResourceClassWipArray;

// Array: ResourcePropertyValueArray
__namespace.ResourcePropertyValueArray = function ResourcePropertyValueArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ResourcePropertyValue";
};
__namespace.ResourcePropertyValueArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourcePropertyValueArray.prototype.constructor = __namespace.ResourcePropertyValueArray;
RemObjects.SDK.RTTI["ResourcePropertyValueArray"] = __namespace.ResourcePropertyValueArray;

// Array: ResourceRequirementArray
__namespace.ResourceRequirementArray = function ResourceRequirementArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ResourceRequirement";
};
__namespace.ResourceRequirementArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourceRequirementArray.prototype.constructor = __namespace.ResourceRequirementArray;
RemObjects.SDK.RTTI["ResourceRequirementArray"] = __namespace.ResourceRequirementArray;

// Array: ResourceRequirementPropertyValueArray
__namespace.ResourceRequirementPropertyValueArray = function ResourceRequirementPropertyValueArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ResourceRequirementPropertyValue";
};
__namespace.ResourceRequirementPropertyValueArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ResourceRequirementPropertyValueArray.prototype.constructor = __namespace.ResourceRequirementPropertyValueArray;
RemObjects.SDK.RTTI["ResourceRequirementPropertyValueArray"] = __namespace.ResourceRequirementPropertyValueArray;

// Array: RoleArray
__namespace.RoleArray = function RoleArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Role";
};
__namespace.RoleArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.RoleArray.prototype.constructor = __namespace.RoleArray;
RemObjects.SDK.RTTI["RoleArray"] = __namespace.RoleArray;

// Array: RoleArrayArray
__namespace.RoleArrayArray = function RoleArrayArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "RoleArray";
};
__namespace.RoleArrayArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.RoleArrayArray.prototype.constructor = __namespace.RoleArrayArray;
RemObjects.SDK.RTTI["RoleArrayArray"] = __namespace.RoleArrayArray;

// Array: ScheduleDataArray
__namespace.ScheduleDataArray = function ScheduleDataArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ScheduleData";
};
__namespace.ScheduleDataArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ScheduleDataArray.prototype.constructor = __namespace.ScheduleDataArray;
RemObjects.SDK.RTTI["ScheduleDataArray"] = __namespace.ScheduleDataArray;

// Array: ScheduledIntervalArray
__namespace.ScheduledIntervalArray = function ScheduledIntervalArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ScheduleInterval";
};
__namespace.ScheduledIntervalArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ScheduledIntervalArray.prototype.constructor = __namespace.ScheduledIntervalArray;
RemObjects.SDK.RTTI["ScheduledIntervalArray"] = __namespace.ScheduledIntervalArray;

// Array: ScheduleStatisticsArray
__namespace.ScheduleStatisticsArray = function ScheduleStatisticsArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "ScheduleStatistics";
};
__namespace.ScheduleStatisticsArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ScheduleStatisticsArray.prototype.constructor = __namespace.ScheduleStatisticsArray;
RemObjects.SDK.RTTI["ScheduleStatisticsArray"] = __namespace.ScheduleStatisticsArray;

// Array: SearchResultItemArray
__namespace.SearchResultItemArray = function SearchResultItemArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "SearchResultItem";
};
__namespace.SearchResultItemArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.SearchResultItemArray.prototype.constructor = __namespace.SearchResultItemArray;
RemObjects.SDK.RTTI["SearchResultItemArray"] = __namespace.SearchResultItemArray;

// Array: ShareArray
__namespace.ShareArray = function ShareArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Share";
};
__namespace.ShareArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.ShareArray.prototype.constructor = __namespace.ShareArray;
RemObjects.SDK.RTTI["ShareArray"] = __namespace.ShareArray;

// Array: SharedAccessUrlArray
__namespace.SharedAccessUrlArray = function SharedAccessUrlArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "SharedAccessUrl";
};
__namespace.SharedAccessUrlArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.SharedAccessUrlArray.prototype.constructor = __namespace.SharedAccessUrlArray;
RemObjects.SDK.RTTI["SharedAccessUrlArray"] = __namespace.SharedAccessUrlArray;

// Array: SpaceArray
__namespace.SpaceArray = function SpaceArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Space";
};
__namespace.SpaceArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.SpaceArray.prototype.constructor = __namespace.SpaceArray;
RemObjects.SDK.RTTI["SpaceArray"] = __namespace.SpaceArray;

// Array: SpaceStageArray
__namespace.SpaceStageArray = function SpaceStageArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "SpaceStage";
};
__namespace.SpaceStageArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.SpaceStageArray.prototype.constructor = __namespace.SpaceStageArray;
RemObjects.SDK.RTTI["SpaceStageArray"] = __namespace.SpaceStageArray;

// Array: StateVariableArray
__namespace.StateVariableArray = function StateVariableArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "StateVariable";
};
__namespace.StateVariableArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.StateVariableArray.prototype.constructor = __namespace.StateVariableArray;
RemObjects.SDK.RTTI["StateVariableArray"] = __namespace.StateVariableArray;

// Array: StringArray
__namespace.StringArray = function StringArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "WideString";
};
__namespace.StringArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.StringArray.prototype.constructor = __namespace.StringArray;
RemObjects.SDK.RTTI["StringArray"] = __namespace.StringArray;

// Array: SVGImageArray
__namespace.SVGImageArray = function SVGImageArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "SVGImage";
};
__namespace.SVGImageArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.SVGImageArray.prototype.constructor = __namespace.SVGImageArray;
RemObjects.SDK.RTTI["SVGImageArray"] = __namespace.SVGImageArray;

// Array: TagArray
__namespace.TagArray = function TagArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Tag";
};
__namespace.TagArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.TagArray.prototype.constructor = __namespace.TagArray;
RemObjects.SDK.RTTI["TagArray"] = __namespace.TagArray;

// Array: TaskArray
__namespace.TaskArray = function TaskArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "Task";
};
__namespace.TaskArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.TaskArray.prototype.constructor = __namespace.TaskArray;
RemObjects.SDK.RTTI["TaskArray"] = __namespace.TaskArray;

// Array: TaskDependencyArray
__namespace.TaskDependencyArray = function TaskDependencyArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "TaskDependency";
};
__namespace.TaskDependencyArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.TaskDependencyArray.prototype.constructor = __namespace.TaskDependencyArray;
RemObjects.SDK.RTTI["TaskDependencyArray"] = __namespace.TaskDependencyArray;

// Array: TemplateArray
__namespace.TemplateArray = function TemplateArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "OutputTemplate";
};
__namespace.TemplateArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.TemplateArray.prototype.constructor = __namespace.TemplateArray;
RemObjects.SDK.RTTI["TemplateArray"] = __namespace.TemplateArray;

// Array: TemplatePackageArray
__namespace.TemplatePackageArray = function TemplatePackageArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "TemplatePackage";
};
__namespace.TemplatePackageArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.TemplatePackageArray.prototype.constructor = __namespace.TemplatePackageArray;
RemObjects.SDK.RTTI["TemplatePackageArray"] = __namespace.TemplatePackageArray;

// Array: TemplateScheduleArray
__namespace.TemplateScheduleArray = function TemplateScheduleArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "TemplateSchedule";
};
__namespace.TemplateScheduleArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.TemplateScheduleArray.prototype.constructor = __namespace.TemplateScheduleArray;
RemObjects.SDK.RTTI["TemplateScheduleArray"] = __namespace.TemplateScheduleArray;

// Array: TimeTrackDetailArray
__namespace.TimeTrackDetailArray = function TimeTrackDetailArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "TimeTrackDetail";
};
__namespace.TimeTrackDetailArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.TimeTrackDetailArray.prototype.constructor = __namespace.TimeTrackDetailArray;
RemObjects.SDK.RTTI["TimeTrackDetailArray"] = __namespace.TimeTrackDetailArray;

// Array: TranslateItemArray
__namespace.TranslateItemArray = function TranslateItemArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "TranslateItem";
};
__namespace.TranslateItemArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.TranslateItemArray.prototype.constructor = __namespace.TranslateItemArray;
RemObjects.SDK.RTTI["TranslateItemArray"] = __namespace.TranslateItemArray;

// Array: UnitOfMeasureArray
__namespace.UnitOfMeasureArray = function UnitOfMeasureArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "UnitOfMeasure";
};
__namespace.UnitOfMeasureArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.UnitOfMeasureArray.prototype.constructor = __namespace.UnitOfMeasureArray;
RemObjects.SDK.RTTI["UnitOfMeasureArray"] = __namespace.UnitOfMeasureArray;

// Array: UpdateableObjectArray
__namespace.UpdateableObjectArray = function UpdateableObjectArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "UpdateableObject";
};
__namespace.UpdateableObjectArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.UpdateableObjectArray.prototype.constructor = __namespace.UpdateableObjectArray;
RemObjects.SDK.RTTI["UpdateableObjectArray"] = __namespace.UpdateableObjectArray;

// Array: UserArray
__namespace.UserArray = function UserArray() {
	RemObjects.SDK.ROArrayType.call(this);
	this.elementType = "User";
};
__namespace.UserArray.prototype = new RemObjects.SDK.ROArrayType();
__namespace.UserArray.prototype.constructor = __namespace.UserArray;
RemObjects.SDK.RTTI["UserArray"] = __namespace.UserArray;


// Exception: ADatoServiceException
__namespace.ADatoServiceException = function ADatoServiceException(e) {
	RemObjects.SDK.ROException.call(this, e);
};
__namespace.ADatoServiceException.prototype = new RemObjects.SDK.ROException();
RemObjects.SDK.RTTI["ADatoServiceException"] = __namespace.ADatoServiceException;


// Exception: SessionExpiredException
__namespace.SessionExpiredException = function SessionExpiredException(e) {
	RemObjects.SDK.ROException.call(this, e);
};
__namespace.SessionExpiredException.prototype = new RemObjects.SDK.ROException();
RemObjects.SDK.RTTI["SessionExpiredException"] = __namespace.SessionExpiredException;


// Exception: AccessDeniedException
__namespace.AccessDeniedException = function AccessDeniedException(e) {
	RemObjects.SDK.ROException.call(this, e);
};
__namespace.AccessDeniedException.prototype = new RemObjects.SDK.ROException();
RemObjects.SDK.RTTI["AccessDeniedException"] = __namespace.AccessDeniedException;



// Service: ADatoService
__namespace.ADatoService = function ADatoService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "ADatoService";
};


__namespace.ADatoService.prototype.Calendars = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Calendars");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "CalendarArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.CheckProjectLUIDIsValid = function(
	LUID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CheckProjectLUIDIsValid");
		msg.write("LUID", "WideString", LUID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.Spaces = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Spaces");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "SpaceArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.SwitchSpace = function(
	SpaceID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SwitchSpace");
		msg.write("SpaceID", "Int64", SpaceID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "User");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.Resources = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Resources");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ResourceArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.ResourcesWithCalendars = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ResourcesWithCalendars");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __Resources = __message.read("Resources", "ResourceArray");
		var __Calendars = __message.read("Calendars", "CalendarArray");
			__success(
		__Resources,
		__Calendars
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.ResourceClasses = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ResourceClasses");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ResourceClassArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.LoadProject = function(
	ID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadProject");
		msg.write("ID", "Int64", ID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Project");
		var __Imports = __message.read("Imports", "UpdateableObjectArray");
			__success(
		__result
		,
		__Imports
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.LoadTemplatePackages = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadTemplatePackages");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TemplatePackageArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.LoadSVGImages = function(
	Names,
	DefaultOnly,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadSVGImages");
		msg.write("Names", "StringArray", Names);
		msg.write("DefaultOnly", "Boolean", DefaultOnly);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "SVGImageArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UpdateSVGImages = function(
	SVGImages,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateSVGImages");
		msg.write("SVGImages", "SVGImageArray", SVGImages);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.LoadProjectFromGuid = function(
	ID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadProjectFromGuid");
		msg.write("ID", "Guid", ID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Project");
		var __Imports = __message.read("Imports", "UpdateableObjectArray");
			__success(
		__result
		,
		__Imports
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UnloadProject = function(
	ID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UnloadProject");
		msg.write("ID", "Int64", ID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.LoadProjects = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadProjects");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ProjectArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.Notes = function(
	Project,
	AType,
	IDs,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Notes");
		msg.write("Project", "Int64", Project);
		msg.write("AType", "ObjectType", AType);
		msg.write("IDs", "Int64Array", IDs);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "NoteArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.Cards = function(
	Project,
	Tasks,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Cards");
		msg.write("Project", "Int64", Project);
		msg.write("Tasks", "Int64Array", Tasks);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "CardArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.CardsTrackingHistory = function(
	Projects,
	Filters,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CardsTrackingHistory");
		msg.write("Projects", "Int64Array", Projects);
		msg.write("Filters", "WideString", Filters);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "CardHistoryItemArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.CardTrackingHistory = function(
	CardID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CardTrackingHistory");
		msg.write("CardID", "Int64", CardID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "CardHistoryItemArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.BudgetGroups = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "BudgetGroups");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "BudgetGroupArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.BudgetItems = function(
	Project,
	TaskIDs,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "BudgetItems");
		msg.write("Project", "Int64", Project);
		msg.write("TaskIDs", "Int64Array", TaskIDs);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "BudgetItemArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.Documents = function(
	Project,
	AType,
	IDs,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Documents");
		msg.write("Project", "Int64", Project);
		msg.write("AType", "ObjectType", AType);
		msg.write("IDs", "Int64Array", IDs);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "DocumentArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UnitOfMeasures = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UnitOfMeasures");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "UnitOfMeasureArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.ApplyUpdates = function(
	Updates,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ApplyUpdates");
		msg.write("Updates", "UpdateableObjectArray", Updates);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "UpdateableObjectArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.InviteNewUser = function(
	ProjectID,
	Email,
	AObjectType,
	ObjectID,
	ObjectName,
	Roles,
	InviteIntoMySpace,
	SendInvitation,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "InviteNewUser");
		msg.write("ProjectID", "Int64", ProjectID);
		msg.write("Email", "WideString", Email);
		msg.write("AObjectType", "ObjectType", AObjectType);
		msg.write("ObjectID", "Int64", ObjectID);
		msg.write("ObjectName", "WideString", ObjectName);
		msg.write("Roles", "Integer", Roles);
		msg.write("InviteIntoMySpace", "Boolean", InviteIntoMySpace);
		msg.write("SendInvitation", "Boolean", SendInvitation);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "User");
		var __UserWasCreated = __message.read("UserWasCreated", "Boolean");
			__success(
		__result
		,
		__UserWasCreated
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.InviteExistingUser = function(
	ProjectID,
	UserID,
	AObjectType,
	ObjectID,
	Roles,
	ResendInvitation,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "InviteExistingUser");
		msg.write("ProjectID", "Int64", ProjectID);
		msg.write("UserID", "Int64", UserID);
		msg.write("AObjectType", "ObjectType", AObjectType);
		msg.write("ObjectID", "Int64", ObjectID);
		msg.write("Roles", "Integer", Roles);
		msg.write("ResendInvitation", "Boolean", ResendInvitation);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.SendInvitationToExistingUser = function(
	UserID,
	InvitedFor,
	ObjectDescription,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SendInvitationToExistingUser");
		msg.write("UserID", "Int64", UserID);
		msg.write("InvitedFor", "ObjectType", InvitedFor);
		msg.write("ObjectDescription", "WideString", ObjectDescription);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.Users = function(
	FullDetails,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Users");
		msg.write("FullDetails", "Boolean", FullDetails);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "UserArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.ProjectHistory = function(
	ProjectIDs,
	Task,
	AType,
	ObjectID,
	Filter,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ProjectHistory");
		msg.write("ProjectIDs", "Int64Array", ProjectIDs);
		msg.write("Task", "Int64", Task);
		msg.write("AType", "ObjectType", AType);
		msg.write("ObjectID", "Int64", ObjectID);
		msg.write("Filter", "WideString", Filter);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ProjectHistoryItemsArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.History = function(
	AType,
	MaxCount,
	LastMarker,
	TextFilter,
	DateFilter,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "History");
		msg.write("AType", "Integer", AType);
		msg.write("MaxCount", "Integer", MaxCount);
		msg.write("LastMarker", "WideString", LastMarker);
		msg.write("TextFilter", "WideString", TextFilter);
		msg.write("DateFilter", "DateTime64", DateFilter);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "HistoryArrayObject");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.Shares = function(
	AType,
	ID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Shares");
		msg.write("AType", "ObjectType", AType);
		msg.write("ID", "Int64", ID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ShareArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.ResourceClassWip = function(
	FromDate,
	ToDate,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ResourceClassWip");
		msg.write("FromDate", "DateTime64", FromDate);
		msg.write("ToDate", "DateTime64", ToDate);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ResourceClassWipArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.RevokeShare = function(
	AType,
	UserID,
	ObjectID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "RevokeShare");
		msg.write("AType", "ObjectType", AType);
		msg.write("UserID", "Int64", UserID);
		msg.write("ObjectID", "Int64", ObjectID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.MyDesignInvitations = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MyDesignInvitations");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __Tasks = __message.read("Tasks", "TaskArray");
		var __Imports = __message.read("Imports", "UpdateableObjectArray");
			__success(
		__Tasks,
		__Imports
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.MyTasks = function(
	CardsHistoryDate,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MyTasks");
		msg.write("CardsHistoryDate", "DateTime64", CardsHistoryDate);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __Tasks = __message.read("Tasks", "TaskArray");
		var __Imports = __message.read("Imports", "UpdateableObjectArray");
			__success(
		__Tasks,
		__Imports
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.MyTasksExit = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MyTasksExit");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.TimeTrackingPerTask = function(
	Tasks,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TimeTrackingPerTask");
		msg.write("Tasks", "Int64Array", Tasks);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TimeTrackDetailArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.TimeTrackingPerCard = function(
	CardID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TimeTrackingPerCard");
		msg.write("CardID", "Int64", CardID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TimeTrackDetailArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.TimeTrackingPerPeriod = function(
	Start,
	Stop,
	IncludeBookingsForTask,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TimeTrackingPerPeriod");
		msg.write("Start", "DateTime64", Start);
		msg.write("Stop", "DateTime64", Stop);
		msg.write("IncludeBookingsForTask", "Int64", IncludeBookingsForTask);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __Bookings = __message.read("Bookings", "TimeTrackDetailArray");
		var __Imports = __message.read("Imports", "UpdateableObjectArray");
			__success(
		__Bookings,
		__Imports
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.TimeTrackingTasks = function(
	HistoryDate,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TimeTrackingTasks");
		msg.write("HistoryDate", "DateTime64", HistoryDate);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __Tasks = __message.read("Tasks", "TaskArray");
		var __Imports = __message.read("Imports", "UpdateableObjectArray");
			__success(
		__Tasks,
		__Imports
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.TimeTrackingPerProject = function(
	Projects,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TimeTrackingPerProject");
		msg.write("Projects", "Int64Array", Projects);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TimeTrackDetailArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.MyRoles = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MyRoles");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "RoleArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.MyTimeTrackingPerPeriod = function(
	PeriodStart,
	PeriodStop,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MyTimeTrackingPerPeriod");
		msg.write("PeriodStart", "DateTime64", PeriodStart);
		msg.write("PeriodStop", "DateTime64", PeriodStop);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __ProjectDetails = __message.read("ProjectDetails", "ProjectTrackingArray");
		var __ActivityDetails = __message.read("ActivityDetails", "ActivityTrackingArray");
		var __Bookings = __message.read("Bookings", "TimeTrackDetailArray");
			__success(
		__ProjectDetails,
		__ActivityDetails,
		__Bookings
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.MyTimeTrackingSummary = function(
	Tasks,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MyTimeTrackingSummary");
		msg.write("Tasks", "Int64Array", Tasks);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __ProjectDetails = __message.read("ProjectDetails", "ProjectTrackingArray");
		var __ActivityDetails = __message.read("ActivityDetails", "ActivityTrackingArray");
			__success(
		__ProjectDetails,
		__ActivityDetails
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.TimeTrackingSummary = function(
	Tasks,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TimeTrackingSummary");
		msg.write("Tasks", "Int64Array", Tasks);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __ProjectDetails = __message.read("ProjectDetails", "ProjectTrackingArray");
		var __ActivityDetails = __message.read("ActivityDetails", "ActivityTrackingArray");
			__success(
		__ProjectDetails,
		__ActivityDetails
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.CloneProject = function(
	ProjectID,
	NewProjectLUID,
	NewProjectName,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CloneProject");
		msg.write("ProjectID", "Int64", ProjectID);
		msg.write("NewProjectLUID", "WideString", NewProjectLUID);
		msg.write("NewProjectName", "WideString", NewProjectName);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Project");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.CloneSpace = function(
	Source,
	Destination,
	ShareSpaceWithAllUsers,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CloneSpace");
		msg.write("Source", "Space", Source);
		msg.write("Destination", "Space", Destination);
		msg.write("ShareSpaceWithAllUsers", "Boolean", ShareSpaceWithAllUsers);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Space");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.DemoSpace = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "DemoSpace");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Space");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.Ping = function(
	ClientVersion,
	EventsReceived,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Ping");
		msg.write("ClientVersion", "Integer", ClientVersion);
		msg.write("EventsReceived", "Int64Array", EventsReceived);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __ClientNeedsUpdating = __message.read("ClientNeedsUpdating", "Boolean");
		var __Updates = __message.read("Updates", "UpdateableObjectArray");
			__success(
		__ClientNeedsUpdating,
		__Updates
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.DeleteTemplate = function(
	ID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "DeleteTemplate");
		msg.write("ID", "Int64", ID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.GetChildrenFromTask = function(
	TaskID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetChildrenFromTask");
		msg.write("TaskID", "Int64", TaskID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TaskArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.GetTemplates = function(
	LangID,
	_Type,
	ReturnContent,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetTemplates");
		msg.write("LangID", "Integer", LangID);
		msg.write("_Type", "TemplateType", _Type);
		msg.write("ReturnContent", "Boolean", ReturnContent);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TemplateArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.GetTemplate = function(
	ID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetTemplate");
		msg.write("ID", "Int64", ID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "OutputTemplate");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.TaskProgressByDate = function(
	ProjectIDs,
	ComparisonDate,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TaskProgressByDate");
		msg.write("ProjectIDs", "Int64Array", ProjectIDs);
		msg.write("ComparisonDate", "DateTime64", ComparisonDate);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.TagProject = function(
	ProjectID,
	ProjectVersion,
	ProjectBufferTagData,
	MilestoneBufferTags,
	OverrideLastTag,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TagProject");
		msg.write("ProjectID", "Int64", ProjectID);
		msg.write("ProjectVersion", "Int64", ProjectVersion);
		msg.write("ProjectBufferTagData", "Tag", ProjectBufferTagData);
		msg.write("MilestoneBufferTags", "BufferTagArray", MilestoneBufferTags);
		msg.write("OverrideLastTag", "Boolean", OverrideLastTag);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Project");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.DeleteProjectTag = function(
	ID,
	IsProjectBufferTag,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "DeleteProjectTag");
		msg.write("ID", "Int64", ID);
		msg.write("IsProjectBufferTag", "Boolean", IsProjectBufferTag);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.GetProjectVersion = function(
	ProjectID,
	Version,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetProjectVersion");
		msg.write("ProjectID", "Int64", ProjectID);
		msg.write("Version", "Integer", Version);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Project");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.LoadProjectsStatusUpdateDates = function(
	ProjectIDs,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadProjectsStatusUpdateDates");
		msg.write("ProjectIDs", "Int64Array", ProjectIDs);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "AnsiString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.GetObjectDependencies = function(
	AType,
	ObjectID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetObjectDependencies");
		msg.write("AType", "ObjectType", AType);
		msg.write("ObjectID", "Int64", ObjectID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ObjectDependencyArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.MergeObjectDependencies = function(
	ObjType,
	ObjID,
	NewID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MergeObjectDependencies");
		msg.write("ObjType", "ObjectType", ObjType);
		msg.write("ObjID", "Int64", ObjID);
		msg.write("NewID", "Int64", NewID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.PortfolioStatistics = function(
	ProjectID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "PortfolioStatistics");
		msg.write("ProjectID", "Int64", ProjectID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "PortfolioStatisticsItemArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UpdateUserStateVariable = function(
	VarName,
	Value,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateUserStateVariable");
		msg.write("VarName", "WideString", VarName);
		msg.write("Value", "WideString", Value);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UpdateStateVariable = function(
	AObjectType,
	ID,
	Name,
	Value,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateStateVariable");
		msg.write("AObjectType", "ObjectType", AObjectType);
		msg.write("ID", "Int64", ID);
		msg.write("Name", "WideString", Name);
		msg.write("Value", "WideString", Value);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UpdateStateVariables = function(
	Variables,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateStateVariables");
		msg.write("Variables", "StateVariableArray", Variables);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.GetStateVariable = function(
	AObjectType,
	ID,
	Name,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetStateVariable");
		msg.write("AObjectType", "ObjectType", AObjectType);
		msg.write("ID", "Int64", ID);
		msg.write("Name", "WideString", Name);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.GetStateVariables = function(
	Keys,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetStateVariables");
		msg.write("Keys", "StateVariableArray", Keys);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "StateVariableArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.MovePropertiesBetweenSkills = function(
	SourcePropertyClassIDs,
	DestPropertyClassIDs,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MovePropertiesBetweenSkills");
		msg.write("SourcePropertyClassIDs", "Int64Array", SourcePropertyClassIDs);
		msg.write("DestPropertyClassIDs", "Int64Array", DestPropertyClassIDs);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Guid");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UpdateUnitOfMeasurePropertyValue = function(
	UOM_ID,
	OldValues,
	NewValues,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateUnitOfMeasurePropertyValue");
		msg.write("UOM_ID", "Int64", UOM_ID);
		msg.write("OldValues", "StringArray", OldValues);
		msg.write("NewValues", "StringArray", NewValues);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Guid");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UserImpersonators = function(
	UserID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UserImpersonators");
		msg.write("UserID", "Int64", UserID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Int64Array");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.LoadMyImpersonations = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadMyImpersonations");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Int64Array");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.UpdateImpersonations = function(
	UserID,
	ImpersonationIDs,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateImpersonations");
		msg.write("UserID", "Int64", UserID);
		msg.write("ImpersonationIDs", "Int64Array", ImpersonationIDs);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.ImpersonateUser = function(
	UserID,
	ImpersonatePortfolio,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ImpersonateUser");
		msg.write("UserID", "Int64", UserID);
		msg.write("ImpersonatePortfolio", "Boolean", ImpersonatePortfolio);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ADatoService.prototype.GetSuccessorsRelations = function(
	ObjectID,
	AObjectType,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetSuccessorsRelations");
		msg.write("ObjectID", "Int64", ObjectID);
		msg.write("AObjectType", "ObjectType", AObjectType);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ObjectsRelationArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: LoginService
__namespace.LoginService = function LoginService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "LoginService";
};


__namespace.LoginService.prototype.Login = function(
	Username,
	Password,
	IsNewAccount,
	ClientVersion,
	ClientType,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Login");
		msg.write("Username", "WideString", Username);
		msg.write("Password", "WideString", Password);
		msg.write("IsNewAccount", "Boolean", IsNewAccount);
		msg.write("ClientVersion", "Integer", ClientVersion);
		msg.write("ClientType", "Integer", ClientType);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "User");
		var __ClientNeedsUpdating = __message.read("ClientNeedsUpdating", "Boolean");
		var __Redirect = __message.read("Redirect", "WideString");
		var __AccountExists = __message.read("AccountExists", "Boolean");
			__success(
		__result
		,
		__ClientNeedsUpdating,
		__Redirect,
		__AccountExists
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.Logout = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Logout");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.ForgotPassword = function(
	_Email,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ForgotPassword");
		msg.write("_Email", "WideString", _Email);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.Hello = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Hello");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.ChangePassword = function(
	OldPassword,
	NewPassword,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ChangePassword");
		msg.write("OldPassword", "WideString", OldPassword);
		msg.write("NewPassword", "WideString", NewPassword);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.DomainCheck = function(
	Domain,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "DomainCheck");
		msg.write("Domain", "WideString", Domain);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __ServiceUrl = __message.read("ServiceUrl", "WideString");
		var __LoginMethod = __message.read("LoginMethod", "WideString");
		var __LoginServiceEndPoint = __message.read("LoginServiceEndPoint", "WideString");
		var __ClientID = __message.read("ClientID", "WideString");
			__success(
		__ServiceUrl,
		__LoginMethod,
		__LoginServiceEndPoint,
		__ClientID
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.OAuthLogin = function(
	Domain,
	Code,
	ClientVersion,
	ClientType,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "OAuthLogin");
		msg.write("Domain", "WideString", Domain);
		msg.write("Code", "WideString", Code);
		msg.write("ClientVersion", "Integer", ClientVersion);
		msg.write("ClientType", "Integer", ClientType);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "User");
		var __ClientNeedsUpdating = __message.read("ClientNeedsUpdating", "Boolean");
			__success(
		__result
		,
		__ClientNeedsUpdating
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.OpenIDLogin = function(
	Domain,
	Nonce,
	id_token,
	ClientVersion,
	ClientType,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "OpenIDLogin");
		msg.write("Domain", "WideString", Domain);
		msg.write("Nonce", "WideString", Nonce);
		msg.write("id_token", "WideString", id_token);
		msg.write("ClientVersion", "Integer", ClientVersion);
		msg.write("ClientType", "Integer", ClientType);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "User");
		var __ClientNeedsUpdating = __message.read("ClientNeedsUpdating", "Boolean");
			__success(
		__result
		,
		__ClientNeedsUpdating
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.MakeProfileSecure = function(
	Domain,
	UserID,
	Nonce,
	IDToken,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "MakeProfileSecure");
		msg.write("Domain", "WideString", Domain);
		msg.write("UserID", "Int64", UserID);
		msg.write("Nonce", "WideString", Nonce);
		msg.write("IDToken", "WideString", IDToken);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.LDAPLogin = function(
	Domain,
	Username,
	ClientVersion,
	ClientType,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LDAPLogin");
		msg.write("Domain", "WideString", Domain);
		msg.write("Username", "WideString", Username);
		msg.write("ClientVersion", "Integer", ClientVersion);
		msg.write("ClientType", "Integer", ClientType);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "User");
		var __ClientNeedsUpdating = __message.read("ClientNeedsUpdating", "Boolean");
			__success(
		__result
		,
		__ClientNeedsUpdating
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.LDAPTestCall = function(
	Domain,
	Base_DN,
	LDAPUsername,
	LDAPPassword,
	Params,
	UsernameToTest,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LDAPTestCall");
		msg.write("Domain", "WideString", Domain);
		msg.write("Base_DN", "WideString", Base_DN);
		msg.write("LDAPUsername", "WideString", LDAPUsername);
		msg.write("LDAPPassword", "WideString", LDAPPassword);
		msg.write("Params", "WideString", Params);
		msg.write("UsernameToTest", "WideString", UsernameToTest);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.LoginService.prototype.LoadCurrentUser = function(
	SessionID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadCurrentUser");
		msg.write("SessionID", "WideString", SessionID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "User");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: ServiceManager
__namespace.ServiceManager = function ServiceManager(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "ServiceManager";
};


__namespace.ServiceManager.prototype.Status = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Status");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ServerStatusInformation");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.UpdateEventLoggingFlags = function(
	Flags,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateEventLoggingFlags");
		msg.write("Flags", "Integer", Flags);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.ClearCache = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ClearCache");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.SetCacheProperties = function(
	Properties,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SetCacheProperties");
		msg.write("Properties", "ObjectCacheProperties", Properties);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.PingJava = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "PingJava");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.RestartJava = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "RestartJava");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.JavaTrace = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "JavaTrace");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.SchedulerPingService = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SchedulerPingService");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.SchedulerClearSessions = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SchedulerClearSessions");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.SchedulerSetActive = function(
	Active,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SchedulerSetActive");
		msg.write("Active", "Boolean", Active);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.SchedulerRunNow = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SchedulerRunNow");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.GetSimulationTemplates = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetSimulationTemplates");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.GetLogEntries = function(
	DateFrom,
	DateTo,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetLogEntries");
		msg.write("DateFrom", "DateTime64", DateFrom);
		msg.write("DateTo", "DateTime64", DateTo);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "LogEntryArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.CleanUpLogEntris = function(
	Till,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CleanUpLogEntris");
		msg.write("Till", "DateTime64", Till);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.SendUnhandledException = function(
	ID,
	Message,
	StackTrace,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SendUnhandledException");
		msg.write("ID", "AnsiString", ID);
		msg.write("Message", "AnsiString", Message);
		msg.write("StackTrace", "AnsiString", StackTrace);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.GetJiraWebhookStatus = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetJiraWebhookStatus");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __IsActive = __message.read("IsActive", "Boolean");
		var __HandledEvents = __message.read("HandledEvents", "Integer");
		var __LastEventReceived = __message.read("LastEventReceived", "DateTime64");
		var __LastEventHandled = __message.read("LastEventHandled", "DateTime64");
			__success(
		__IsActive,
		__HandledEvents,
		__LastEventReceived,
		__LastEventHandled
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ServiceManager.prototype.SetJiraWebhookStatus = function(
	SetActive,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SetJiraWebhookStatus");
		msg.write("SetActive", "Boolean", SetActive);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: FileService
__namespace.FileService = function FileService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "FileService";
};


__namespace.FileService.prototype.StartUpload = function(
	FullFileName,
	Size,
	Icons,
	UploadToStorage,
	ReplacementForFileWithDate,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "StartUpload");
		msg.write("FullFileName", "WideString", FullFileName);
		msg.write("Size", "Int64", Size);
		msg.write("Icons", "IconArray", Icons);
		msg.write("UploadToStorage", "Boolean", UploadToStorage);
		msg.write("ReplacementForFileWithDate", "DateTime64", ReplacementForFileWithDate);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __Handle = __message.read("Handle", "Guid");
			__success(
		__Handle
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.UploadChunk = function(
	Handle,
	filedata,
	IsLastChunk,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UploadChunk");
		msg.write("Handle", "Guid", Handle);
		msg.write("filedata", "Binary", filedata);
		msg.write("IsLastChunk", "Boolean", IsLastChunk);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.AbortUpload = function(
	Handle,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "AbortUpload");
		msg.write("Handle", "Guid", Handle);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.StartDownload = function(
	FullName,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "StartDownload");
		msg.write("FullName", "WideString", FullName);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Guid");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.DownloadChunk = function(
	Handle,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "DownloadChunk");
		msg.write("Handle", "Guid", Handle);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __filedata = __message.read("filedata", "Binary");
		var __IsLastChunk = __message.read("IsLastChunk", "Boolean");
			__success(
		__filedata,
		__IsLastChunk
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.GetDocument = function(
	FullName,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetDocument");
		msg.write("FullName", "WideString", FullName);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Document");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.FindDocuments = function(
	Filter,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "FindDocuments");
		msg.write("Filter", "WideString", Filter);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "DocumentArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.GetSharedAccessUri = function(
	URLs,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetSharedAccessUri");
		msg.write("URLs", "StringArray", URLs);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "SharedAccessUrlArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.LockDocument = function(
	ADocument,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LockDocument");
		msg.write("ADocument", "Document", ADocument);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Document");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.UnlockDocument = function(
	ADocument,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UnlockDocument");
		msg.write("ADocument", "Document", ADocument);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Document");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.FileService.prototype.SendDocuments = function(
	Receivers,
	Subject,
	Body,
	FileHandles,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SendDocuments");
		msg.write("Receivers", "StringArray", Receivers);
		msg.write("Subject", "WideString", Subject);
		msg.write("Body", "WideString", Body);
		msg.write("FileHandles", "GuidArray", FileHandles);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: ImportService
__namespace.ImportService = function ImportService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "ImportService";
};


__namespace.ImportService.prototype.Import = function(
	FileHandle,
	CustomFields,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Import");
		msg.write("FileHandle", "Guid", FileHandle);
		msg.write("CustomFields", "WideString", CustomFields);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Project");
		var __Imports = __message.read("Imports", "UpdateableObjectArray");
			__success(
		__result
		,
		__Imports
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.ImportService.prototype.ImportTemplate = function(
	TemplateID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ImportTemplate");
		msg.write("TemplateID", "Int64", TemplateID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Project");
		var __Imports = __message.read("Imports", "UpdateableObjectArray");
			__success(
		__result
		,
		__Imports
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: ScheduleService
__namespace.ScheduleService = function ScheduleService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "ScheduleService";
};


__namespace.ScheduleService.prototype.ScheduleProjects = function(
	Files,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ScheduleProjects");
		msg.write("Files", "FileArray", Files);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: InternalScheduler
__namespace.InternalScheduler = function InternalScheduler(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "InternalScheduler";
};


__namespace.InternalScheduler.prototype.StartSession = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "StartSession");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Guid");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.InternalScheduler.prototype.LoadImports = function(
	Session,
	Imports,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadImports");
		msg.write("Session", "Guid", Session);
		msg.write("Imports", "UpdateableObjectArray", Imports);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.InternalScheduler.prototype.LoadProject = function(
	Session,
	_Project,
	Imports,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadProject");
		msg.write("Session", "Guid", Session);
		msg.write("_Project", "Project", _Project);
		msg.write("Imports", "UpdateableObjectArray", Imports);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.InternalScheduler.prototype.RescheduleSession = function(
	Session,
	Strategy,
	ReturnDataFlags,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "RescheduleSession");
		msg.write("Session", "Guid", Session);
		msg.write("Strategy", "ScheduleStrategy", Strategy);
		msg.write("ReturnDataFlags", "Integer", ReturnDataFlags);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __ProjectStatistics = __message.read("ProjectStatistics", "ScheduleStatisticsArray");
		var __ScheduleDetails = __message.read("ScheduleDetails", "ScheduleDataArray");
		var __ResourceClassStatistics = __message.read("ResourceClassStatistics", "ResourceClassStatisticsArray");
		var __UpdatedObjects = __message.read("UpdatedObjects", "UpdateableObjectArray");
			__success(
		__ProjectStatistics,
		__ScheduleDetails,
		__ResourceClassStatistics,
		__UpdatedObjects
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.InternalScheduler.prototype.CloseSession = function(
	Session,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CloseSession");
		msg.write("Session", "Guid", Session);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.InternalScheduler.prototype.Ping = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Ping");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.InternalScheduler.prototype.Terminate = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Terminate");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.InternalScheduler.prototype.ClearSessions = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ClearSessions");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.InternalScheduler.prototype.ExportProjectAsXML = function(
	Session,
	ProjectID,
	Flags,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ExportProjectAsXML");
		msg.write("Session", "Guid", Session);
		msg.write("ProjectID", "Int64", ProjectID);
		msg.write("Flags", "Integer", Flags);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: SpaceAdministration
__namespace.SpaceAdministration = function SpaceAdministration(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "SpaceAdministration";
};


__namespace.SpaceAdministration.prototype.GetStorageSettings = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetStorageSettings");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "WideString");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.SetStorageSettings = function(
	Settings,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SetStorageSettings");
		msg.write("Settings", "WideString", Settings);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.FindSpaces = function(
	Search,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "FindSpaces");
		msg.write("Search", "WideString", Search);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "SpaceArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.GetUsersFromSpaces = function(
	SpaceIDs,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetUsersFromSpaces");
		msg.write("SpaceIDs", "Int64Array", SpaceIDs);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "UserArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.GetInvitationEmailText = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetInvitationEmailText");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __DefaultTextAsJson = __message.read("DefaultTextAsJson", "WideString");
		var __CurrentTextAsJson = __message.read("CurrentTextAsJson", "WideString");
			__success(
		__DefaultTextAsJson,
		__CurrentTextAsJson
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.SetInvitationEmailText = function(
	Subject,
	Content,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SetInvitationEmailText");
		msg.write("Subject", "WideString", Subject);
		msg.write("Content", "WideString", Content);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.LDAPGetConfiguration = function(
	Domain,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LDAPGetConfiguration");
		msg.write("Domain", "WideString", Domain);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __Base_DN = __message.read("Base_DN", "WideString");
		var __Params = __message.read("Params", "WideString");
		var __DefaultSpace = __message.read("DefaultSpace", "Space");
		var __SSOLDAPUsername = __message.read("SSOLDAPUsername", "WideString");
			__success(
		__Base_DN,
		__Params,
		__DefaultSpace,
		__SSOLDAPUsername
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.LDAPSaveConfiguration = function(
	Domain,
	Base_DN,
	Params,
	DefaultSpace,
	SSOLDAPUsername,
	SSOLDAPPassword,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LDAPSaveConfiguration");
		msg.write("Domain", "WideString", Domain);
		msg.write("Base_DN", "WideString", Base_DN);
		msg.write("Params", "WideString", Params);
		msg.write("DefaultSpace", "Int64", DefaultSpace);
		msg.write("SSOLDAPUsername", "WideString", SSOLDAPUsername);
		msg.write("SSOLDAPPassword", "WideString", SSOLDAPPassword);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.JiraGetConfiguration = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "JiraGetConfiguration");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.JiraSetConfiguration = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "JiraSetConfiguration");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.OpenIDGetConfiguration = function(
	Domain,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "OpenIDGetConfiguration");
		msg.write("Domain", "WideString", Domain);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __Params = __message.read("Params", "WideString");
		var __DefaultSpace = __message.read("DefaultSpace", "Space");
			__success(
		__Params,
		__DefaultSpace
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SpaceAdministration.prototype.OpenIDSetConfiguration = function(
	Domain,
	Params,
	DefaultSpace,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "OpenIDSetConfiguration");
		msg.write("Domain", "WideString", Domain);
		msg.write("Params", "WideString", Params);
		msg.write("DefaultSpace", "Int64", DefaultSpace);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: EPMService
__namespace.EPMService = function EPMService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "EPMService";
};


__namespace.EPMService.prototype.Login = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Login");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.SetServerUrl = function(
	URL,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SetServerUrl");
		msg.write("URL", "WideString", URL);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.CustomFields = function(
	_Type,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CustomFields");
		msg.write("_Type", "ObjectType", _Type);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "CustomFieldArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.TestResourceIsValidForProject = function(
	Project,
	ResourceName,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "TestResourceIsValidForProject");
		msg.write("Project", "Int64", Project);
		msg.write("ResourceName", "WideString", ResourceName);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "EPMResource");
		var __ResourceIsEnterpriseResource = __message.read("ResourceIsEnterpriseResource", "Boolean");
			__success(
		__result
		,
		__ResourceIsEnterpriseResource
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.ServerSupportsSkills = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ServerSupportsSkills");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.SetProjectFilter = function(
	Filter,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SetProjectFilter");
		msg.write("Filter", "WideString", Filter);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.SetLoadObjectsToLoad = function(
	Objects,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SetLoadObjectsToLoad");
		msg.write("Objects", "ObjectTypeArray", Objects);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.ProjectPropertiesCustomFieldUid = function(
	UID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ProjectPropertiesCustomFieldUid");
		msg.write("UID", "Guid", UID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.ResourceAssignmentCustomFieldUid = function(
	UID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ResourceAssignmentCustomFieldUid");
		msg.write("UID", "Guid", UID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.ResourcePositionRoleCustomFieldUid = function(
	UID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ResourcePositionRoleCustomFieldUid");
		msg.write("UID", "Guid", UID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.CheckOutProject = function(
	ID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CheckOutProject");
		msg.write("ID", "Int64", ID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.CheckInProject = function(
	ID,
	Force,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "CheckInProject");
		msg.write("ID", "Int64", ID);
		msg.write("Force", "Boolean", Force);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.EPMService.prototype.PublishProject = function(
	ID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "PublishProject");
		msg.write("ID", "Int64", ID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: JiraService
__namespace.JiraService = function JiraService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "JiraService";
};


__namespace.JiraService.prototype.UpdateCardFromJsonString = function(
	CardToUpdate,
	Json,
	JiraMetaData,
	CardProperties,
	Imports,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateCardFromJsonString");
		msg.write("CardToUpdate", "Card", CardToUpdate);
		msg.write("Json", "WideString", Json);
		msg.write("JiraMetaData", "WideString", JiraMetaData);
		msg.write("CardProperties", "WideString", CardProperties);
		msg.write("Imports", "UpdateableObjectArray", Imports);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Card");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.JiraService.prototype.UpdateCardInContext = function(
	ProjectContext,
	CardUpdateData,
	JiraMetaData,
	Imports,
	MoveCardIntoWorkpackageID,
	UpdateState_,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UpdateCardInContext");
		msg.write("ProjectContext", "Project", ProjectContext);
		msg.write("CardUpdateData", "WideString", CardUpdateData);
		msg.write("JiraMetaData", "WideString", JiraMetaData);
		msg.write("Imports", "UpdateableObjectArray", Imports);
		msg.write("MoveCardIntoWorkpackageID", "Int64", MoveCardIntoWorkpackageID);
		msg.write("UpdateState_", "UpdateState", UpdateState_);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "UpdateableObjectArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.JiraService.prototype.LockWebhooksFromDomain = function(
	Domain,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LockWebhooksFromDomain");
		msg.write("Domain", "WideString", Domain);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Int64");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.JiraService.prototype.UnlockWebhooksFromDomain = function(
	Domain,
	Token,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "UnlockWebhooksFromDomain");
		msg.write("Domain", "WideString", Domain);
		msg.write("Token", "Int64", Token);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.JiraService.prototype.WebhookQueuedItems = function(
	InstallEventListener,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "WebhookQueuedItems");
		msg.write("InstallEventListener", "Boolean", InstallEventListener);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "JSONStringArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.JiraService.prototype.WebhookQueuedItemsUninstall = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "WebhookQueuedItemsUninstall");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.JiraService.prototype.WebHookTracking = function(
	ShowUnhandledEvents,
	Key,
	Top,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "WebHookTracking");
		msg.write("ShowUnhandledEvents", "Boolean", ShowUnhandledEvents);
		msg.write("Key", "WideString", Key);
		msg.write("Top", "Int64", Top);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "JSONStringArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.JiraService.prototype.SetGetUserCallbackPortNumber = function(
	Port,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SetGetUserCallbackPortNumber");
		msg.write("Port", "Integer", Port);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: TranslationService
__namespace.TranslationService = function TranslationService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "TranslationService";
};


__namespace.TranslationService.prototype.Translate = function(
	Language,
	TranslateItems,
	LoadAllAvailable,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "Translate");
		msg.write("Language", "WideString", Language);
		msg.write("TranslateItems", "TranslateItemArray", TranslateItems);
		msg.write("LoadAllAvailable", "Boolean", LoadAllAvailable);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TranslateItemArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.TranslationService.prototype.GetLanguages = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "GetLanguages");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "LanguageArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.TranslationService.prototype.ModifyTranslation = function(
	LanguageCode,
	Modifications,
	UserID,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "ModifyTranslation");
		msg.write("LanguageCode", "AnsiString", LanguageCode);
		msg.write("Modifications", "TranslateItemArray", Modifications);
		msg.write("UserID", "Int64", UserID);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TranslateItemArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.TranslationService.prototype.LoadUpdates = function(
	LanguageCode,
	LastUpdateVersion,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "LoadUpdates");
		msg.write("LanguageCode", "AnsiString", LanguageCode);
		msg.write("LastUpdateVersion", "Int64", LastUpdateVersion);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "TranslateItemArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: InternalServerCallbackService
__namespace.InternalServerCallbackService = function InternalServerCallbackService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "InternalServerCallbackService";
};


__namespace.InternalServerCallbackService.prototype.JiraUserToLynxUser = function(
	ClientID,
	JiraUsername,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "JiraUserToLynxUser");
		msg.write("ClientID", "WideString", ClientID);
		msg.write("JiraUsername", "WideString", JiraUsername);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Int64");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};


// Service: SearchService
__namespace.SearchService = function SearchService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "SearchService";
};


__namespace.SearchService.prototype.SearchQueuedItems = function(
	InstallEventListener,
	SearchText,
	SearchIn,
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SearchQueuedItems");
		msg.write("InstallEventListener", "Boolean", InstallEventListener);
		msg.write("SearchText", "WideString", SearchText);
		msg.write("SearchIn", "Integer", SearchIn);
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "SearchResultItemArray");
			__success(
		__result
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};

__namespace.SearchService.prototype.SearchQueuedItemsUninstall = function(
	__success, __error) {
	try {
		var msg = this.fMessage.clone();
		msg.initialize(this.fServiceName, "SearchQueuedItemsUninstall");
		msg.finalize();
		this.fChannel.dispatch(msg, function (__message) {
			__success(
		);
		}, __error);

	} catch (e) {
		__error(msg, e);
	};
};



// Event sink: ServerUpdateSink
__namespace.ServerUpdateSink = function ServerUpdateSink() {
	this.ServerUpdates = {
		Updates : {dataType : "UpdateableObjectArray", value : null}
	};
	this.ServerOperationCompleted = {
		OperationID : {dataType : "Guid", value : null}
	};
	this.Hello = {
		SessionID : {dataType : "WideString", value : null}
	};
};
__namespace.ServerUpdateSink.prototype = new RemObjects.SDK.ROEventSink();
__namespace.ServerUpdateSink.prototype.constructor = __namespace.ServerUpdateSink;
RemObjects.SDK.RTTI["ServerUpdateSink"] = __namespace.ServerUpdateSink;

// Event sink: JiraQueueEventSink
__namespace.JiraQueueEventSink = function JiraQueueEventSink() {
	this.QueueItemUpdated = {
		JSONData : {dataType : "WideString", value : null}
	};
	this.QueueItemCompleted = {
		ID : {dataType : "Int64", value : null}
	};
};
__namespace.JiraQueueEventSink.prototype = new RemObjects.SDK.ROEventSink();
__namespace.JiraQueueEventSink.prototype.constructor = __namespace.JiraQueueEventSink;
RemObjects.SDK.RTTI["JiraQueueEventSink"] = __namespace.JiraQueueEventSink;

// Event sink: SearchQueueEventSink
__namespace.SearchQueueEventSink = function SearchQueueEventSink() {
	this.QueueItemUpdated = {
		SearchItem : {dataType : "SearchResultItem", value : null}
	};
	this.QueueItemCompleted = {
		ID : {dataType : "Int64", value : null}
	};
};
__namespace.SearchQueueEventSink.prototype = new RemObjects.SDK.ROEventSink();
__namespace.SearchQueueEventSink.prototype.constructor = __namespace.SearchQueueEventSink;
RemObjects.SDK.RTTI["SearchQueueEventSink"] = __namespace.SearchQueueEventSink;

